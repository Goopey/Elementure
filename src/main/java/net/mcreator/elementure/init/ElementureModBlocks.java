
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.mcreator.elementure.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;

import net.minecraft.world.level.block.Block;

import net.mcreator.elementure.block.YellowrimevineBlock;
import net.mcreator.elementure.block.YellowrimemossBlock;
import net.mcreator.elementure.block.YellowrimefanBlock;
import net.mcreator.elementure.block.YellowrimebushBlock;
import net.mcreator.elementure.block.YellowbarrierclosingBlock;
import net.mcreator.elementure.block.YellowbarrierBlock;
import net.mcreator.elementure.block.WortashsaplingBlock;
import net.mcreator.elementure.block.WortashrootsBlock;
import net.mcreator.elementure.block.WortashleavesBlock;
import net.mcreator.elementure.block.WindyshoresmemorialBlock;
import net.mcreator.elementure.block.WindyshoresOmeganBlock;
import net.mcreator.elementure.block.WildsunberrybushBlock;
import net.mcreator.elementure.block.WildstrawberrybushBlock;
import net.mcreator.elementure.block.WildperryberryBlock;
import net.mcreator.elementure.block.WildgobberrybushBlock;
import net.mcreator.elementure.block.WildcoldberrybushBlock;
import net.mcreator.elementure.block.WildblueberryBlock;
import net.mcreator.elementure.block.WildbilborrybushBlock;
import net.mcreator.elementure.block.WildbeestingberrybushBlock;
import net.mcreator.elementure.block.WhiterimevineBlock;
import net.mcreator.elementure.block.WhiterimemossBlock;
import net.mcreator.elementure.block.WhiterimefanBlock;
import net.mcreator.elementure.block.WhiterimebushBlock;
import net.mcreator.elementure.block.WhiteprismaticcrystalblockBlock;
import net.mcreator.elementure.block.WhitebarrierclosingBlock;
import net.mcreator.elementure.block.WhitebarrierBlock;
import net.mcreator.elementure.block.WeaponaltarBlock;
import net.mcreator.elementure.block.WeaponForgeBlock;
import net.mcreator.elementure.block.WaterstarBlock;
import net.mcreator.elementure.block.WaterruneblockBlock;
import net.mcreator.elementure.block.WaterelementliquidBlock;
import net.mcreator.elementure.block.WarpedforestmemorialBlock;
import net.mcreator.elementure.block.WallwebBlock;
import net.mcreator.elementure.block.VoidruneblockBlock;
import net.mcreator.elementure.block.VisionstarBlock;
import net.mcreator.elementure.block.VamiteoreBlock;
import net.mcreator.elementure.block.VamiteblockBlock;
import net.mcreator.elementure.block.TriggeredsirenheartBlock;
import net.mcreator.elementure.block.Tier1harvestedwaterelementBlock;
import net.mcreator.elementure.block.Tier1harvestedlightningelementBlock;
import net.mcreator.elementure.block.Tier1harvestedfireelementBlock;
import net.mcreator.elementure.block.Tier1harvestedearthelementBlock;
import net.mcreator.elementure.block.Tier1harvestedairelementBlock;
import net.mcreator.elementure.block.ThepitlandsPortalBlock;
import net.mcreator.elementure.block.ThebeginningofeverythingBlock;
import net.mcreator.elementure.block.TheabyssPortalBlock;
import net.mcreator.elementure.block.TarblockBlock;
import net.mcreator.elementure.block.TarDarkstoneBlock;
import net.mcreator.elementure.block.TarBlock;
import net.mcreator.elementure.block.TaigamemorialBlock;
import net.mcreator.elementure.block.SwampmemorialBlock;
import net.mcreator.elementure.block.SunturfblockBlock;
import net.mcreator.elementure.block.SunberrybushBlock;
import net.mcreator.elementure.block.StrippedlilypadlogFullBlock;
import net.mcreator.elementure.block.StrippedlilypadlogBlock;
import net.mcreator.elementure.block.StrippedFlufflogfullBlock;
import net.mcreator.elementure.block.StrippedFlufflogBlock;
import net.mcreator.elementure.block.StrenghtstarBlock;
import net.mcreator.elementure.block.StrawberrybushBlock;
import net.mcreator.elementure.block.StonememorymatrixBlock;
import net.mcreator.elementure.block.StarryrootsBlock;
import net.mcreator.elementure.block.StarflowerBlock;
import net.mcreator.elementure.block.SpringwateralphanBlock;
import net.mcreator.elementure.block.SpringwaterBlock;
import net.mcreator.elementure.block.SpidernestCobblestoneBlock;
import net.mcreator.elementure.block.SpiderboreDeepslatebricksBlock;
import net.mcreator.elementure.block.SpiderboreCobblestoneBlock;
import net.mcreator.elementure.block.SpeedstarBlock;
import net.mcreator.elementure.block.SpawnercrystalbrokenBlock;
import net.mcreator.elementure.block.SpawnercrystalBlock;
import net.mcreator.elementure.block.SparklingstarsBlock;
import net.mcreator.elementure.block.SoulsandvalleymemorialBlock;
import net.mcreator.elementure.block.SoulforgeBlock;
import net.mcreator.elementure.block.SolarlilyBlock;
import net.mcreator.elementure.block.SnowymemorialBlock;
import net.mcreator.elementure.block.SmoothCloudSandstoneWallBlock;
import net.mcreator.elementure.block.SmoothCloudSandstoneStairsBlock;
import net.mcreator.elementure.block.SmoothCloudSandstoneSlabBlock;
import net.mcreator.elementure.block.SmoothCloudSandstoneBlock;
import net.mcreator.elementure.block.SmallScrapperBlock;
import net.mcreator.elementure.block.SkyjadeblockBlock;
import net.mcreator.elementure.block.SirenheartBlock;
import net.mcreator.elementure.block.SilvershoressandBlock;
import net.mcreator.elementure.block.SilvershoresliquidBlock;
import net.mcreator.elementure.block.SilveroreBlock;
import net.mcreator.elementure.block.SilverblockBlock;
import net.mcreator.elementure.block.ShimmeringoreBlock;
import net.mcreator.elementure.block.ShieldingprotectionruneSmallBlock;
import net.mcreator.elementure.block.ShieldingprotectionruneBlock;
import net.mcreator.elementure.block.ShavednetherlogBlock;
import net.mcreator.elementure.block.Shavednetherlog6Block;
import net.mcreator.elementure.block.ShardlessmaelstromlogBlock;
import net.mcreator.elementure.block.ShardedglasspaneBlock;
import net.mcreator.elementure.block.ShardedglassBlock;
import net.mcreator.elementure.block.SeafoambubbleBlock;
import net.mcreator.elementure.block.ScribingStationBlock;
import net.mcreator.elementure.block.ScrapsaplingBlock;
import net.mcreator.elementure.block.ScrapleavesBlock;
import net.mcreator.elementure.block.SavannamemorialBlock;
import net.mcreator.elementure.block.SaturationstarBlock;
import net.mcreator.elementure.block.RunebrickschiseledBlock;
import net.mcreator.elementure.block.RunebricksBlock;
import net.mcreator.elementure.block.RuneblockBlock;
import net.mcreator.elementure.block.RuingranitetileswallsBlock;
import net.mcreator.elementure.block.RuingranitetilesstairsBlock;
import net.mcreator.elementure.block.RuingranitetilesslabsBlock;
import net.mcreator.elementure.block.RuingranitetilesBlock;
import net.mcreator.elementure.block.RuingranitebrickswallsBlock;
import net.mcreator.elementure.block.RuingranitebricksstairsBlock;
import net.mcreator.elementure.block.RuingranitebricksslabsBlock;
import net.mcreator.elementure.block.RuingranitebricksBlock;
import net.mcreator.elementure.block.RuingraniteBlock;
import net.mcreator.elementure.block.RottendemonheartBlock;
import net.mcreator.elementure.block.RimesapBlock;
import net.mcreator.elementure.block.ResistancestarBlock;
import net.mcreator.elementure.block.RegensubstanceBlock;
import net.mcreator.elementure.block.RedrimevineBlock;
import net.mcreator.elementure.block.RedrimemossBlock;
import net.mcreator.elementure.block.RedrimefanBlock;
import net.mcreator.elementure.block.RedrimebushBlock;
import net.mcreator.elementure.block.RedbarrierclosingBlock;
import net.mcreator.elementure.block.RedbarrierBlock;
import net.mcreator.elementure.block.RedOstreeLeavesBlock;
import net.mcreator.elementure.block.ReceivingprotectionruneBlock;
import net.mcreator.elementure.block.RecallaltarBlock;
import net.mcreator.elementure.block.Rarememoryplant3Block;
import net.mcreator.elementure.block.Rarememoryplant2Block;
import net.mcreator.elementure.block.Rarememoryplant1Block;
import net.mcreator.elementure.block.RareglasslightBlock;
import net.mcreator.elementure.block.RandomteleportBlockBlock;
import net.mcreator.elementure.block.RagdollalphanBlock;
import net.mcreator.elementure.block.RadiantobsidianBlock;
import net.mcreator.elementure.block.PurplerimevineBlock;
import net.mcreator.elementure.block.PurplerimemossBlock;
import net.mcreator.elementure.block.PurplerimefanBlock;
import net.mcreator.elementure.block.PurplerimebushBlock;
import net.mcreator.elementure.block.PurplemushroomsBlock;
import net.mcreator.elementure.block.PurplemushroomblockBlock;
import net.mcreator.elementure.block.PurplebarrierclosingBlock;
import net.mcreator.elementure.block.PurplebarrierBlock;
import net.mcreator.elementure.block.PumpkincoreBlock;
import net.mcreator.elementure.block.ProtectionzoneremoverBlock;
import net.mcreator.elementure.block.ProtectionruneBlock;
import net.mcreator.elementure.block.ProtectionremoverBlock;
import net.mcreator.elementure.block.PrismaticsproutBlock;
import net.mcreator.elementure.block.PrismaticcrystalblockBlock;
import net.mcreator.elementure.block.PooltileWallsBlock;
import net.mcreator.elementure.block.PooltileTrapdoorBlock;
import net.mcreator.elementure.block.PooltileSummonerBlock;
import net.mcreator.elementure.block.PooltileStairsBlock;
import net.mcreator.elementure.block.PooltileSlabsBlock;
import net.mcreator.elementure.block.PooltileDoorBlock;
import net.mcreator.elementure.block.PooltileBlock;
import net.mcreator.elementure.block.PolishedruingraniteBlock;
import net.mcreator.elementure.block.PolishedlightningandesiteBlock;
import net.mcreator.elementure.block.PolishedenergydioriteBlock;
import net.mcreator.elementure.block.PlainsmemorialBlock;
import net.mcreator.elementure.block.PitstoneBlock;
import net.mcreator.elementure.block.PinkslimeturfBlock;
import net.mcreator.elementure.block.PinkslimesproutBlock;
import net.mcreator.elementure.block.PinkslimefolBlock;
import net.mcreator.elementure.block.PinkrimevineBlock;
import net.mcreator.elementure.block.PinkrimemossBlock;
import net.mcreator.elementure.block.PinkrimefanBlock;
import net.mcreator.elementure.block.PinkrimebushBlock;
import net.mcreator.elementure.block.PinkjellyblockBlock;
import net.mcreator.elementure.block.PinkbarrierclosingBlock;
import net.mcreator.elementure.block.PinkbarrierBlock;
import net.mcreator.elementure.block.PervadedbedrockBlock;
import net.mcreator.elementure.block.PerryberrybushBlock;
import net.mcreator.elementure.block.OstreeomeganBlock;
import net.mcreator.elementure.block.OstreelogFullBlock;
import net.mcreator.elementure.block.OstreelogFull5Block;
import net.mcreator.elementure.block.OstreelogFull4Block;
import net.mcreator.elementure.block.OstreelogFull3Block;
import net.mcreator.elementure.block.OstreelogFull2Block;
import net.mcreator.elementure.block.OstreelogBlock;
import net.mcreator.elementure.block.Ostreelog5Block;
import net.mcreator.elementure.block.Ostreelog4Block;
import net.mcreator.elementure.block.Ostreelog3Block;
import net.mcreator.elementure.block.Ostreelog2Block;
import net.mcreator.elementure.block.OstreeLeavesBlock;
import net.mcreator.elementure.block.OrangerimevineBlock;
import net.mcreator.elementure.block.OrangerimemossBlock;
import net.mcreator.elementure.block.OrangerimefanBlock;
import net.mcreator.elementure.block.OrangerimebushBlock;
import net.mcreator.elementure.block.OrangebarrierclosingBlock;
import net.mcreator.elementure.block.OrangebarrierBlock;
import net.mcreator.elementure.block.OrangeOstreeLeavesBlock;
import net.mcreator.elementure.block.OmegancenterBlock;
import net.mcreator.elementure.block.OldplankstairsBlock;
import net.mcreator.elementure.block.OldplankslabBlock;
import net.mcreator.elementure.block.OldplankBlock;
import net.mcreator.elementure.block.OldlogBlock;
import net.mcreator.elementure.block.OldleavesBlock;
import net.mcreator.elementure.block.OldfurnaceBlock;
import net.mcreator.elementure.block.OlddoorBlock;
import net.mcreator.elementure.block.OldcraftingtableBlock;
import net.mcreator.elementure.block.OldbrickwallsBlock;
import net.mcreator.elementure.block.OldbrickstairsBlock;
import net.mcreator.elementure.block.OldbrickslabsBlock;
import net.mcreator.elementure.block.OldbricksBlock;
import net.mcreator.elementure.block.OldbedBlock;
import net.mcreator.elementure.block.OceanmemorialBlock;
import net.mcreator.elementure.block.ObsidiansproutsBlock;
import net.mcreator.elementure.block.NoobiumoreBlock;
import net.mcreator.elementure.block.NoobiumblockBlock;
import net.mcreator.elementure.block.NightmareShamanBlock;
import net.mcreator.elementure.block.NetherumshinyBlock;
import net.mcreator.elementure.block.NetherumfluidBlock;
import net.mcreator.elementure.block.NetherumdustNebulaturfblockBlock;
import net.mcreator.elementure.block.NetherumcarpetshinyBlock;
import net.mcreator.elementure.block.NetherumcarpetBlock;
import net.mcreator.elementure.block.NetherumBlock;
import net.mcreator.elementure.block.NethertrapBlock;
import net.mcreator.elementure.block.NetherstarmemorialBlock;
import net.mcreator.elementure.block.NetherstarcrustshinyBlock;
import net.mcreator.elementure.block.NetherstarcrustpatchshinyBlock;
import net.mcreator.elementure.block.NetherstarcrustpatchBlock;
import net.mcreator.elementure.block.NetherstarcrustBlock;
import net.mcreator.elementure.block.NetherstarPrismaticwallBlock;
import net.mcreator.elementure.block.NetherstarPrismaticspawnerBlock;
import net.mcreator.elementure.block.NetherstarBiomeOmeganBlock;
import net.mcreator.elementure.block.NetherstarBiomeAlphanBlock;
import net.mcreator.elementure.block.NetherstairsBlock;
import net.mcreator.elementure.block.NetherslabBlock;
import net.mcreator.elementure.block.NethersaplingBlock;
import net.mcreator.elementure.block.NetherpressureplateBlock;
import net.mcreator.elementure.block.NetherplanksBlock;
import net.mcreator.elementure.block.NethermemorialBlock;
import net.mcreator.elementure.block.NetherlogBlock;
import net.mcreator.elementure.block.Netherlog6Block;
import net.mcreator.elementure.block.NetherleavesBlock;
import net.mcreator.elementure.block.NetheriteoreBlock;
import net.mcreator.elementure.block.NethergateBlock;
import net.mcreator.elementure.block.Netherfruitplant4Block;
import net.mcreator.elementure.block.Netherfruitplant3Block;
import net.mcreator.elementure.block.Netherfruitplant2Block;
import net.mcreator.elementure.block.Netherfruitplant1Block;
import net.mcreator.elementure.block.NetherfenceBlock;
import net.mcreator.elementure.block.NetherdoorBlock;
import net.mcreator.elementure.block.NetherbuttonBlock;
import net.mcreator.elementure.block.NeoningotblockBlock;
import net.mcreator.elementure.block.NeonblockBlock;
import net.mcreator.elementure.block.NebulaoxeyeBlock;
import net.mcreator.elementure.block.NanoshrimppotBlock;
import net.mcreator.elementure.block.MyceniummossBlock;
import net.mcreator.elementure.block.MyceniumBlock;
import net.mcreator.elementure.block.MycenavineBlock;
import net.mcreator.elementure.block.MycenasproutsBlock;
import net.mcreator.elementure.block.MycenasporecloudBlockBlock;
import net.mcreator.elementure.block.MycenashroomblockBlock;
import net.mcreator.elementure.block.MycenanalloyblockBlock;
import net.mcreator.elementure.block.MycenamossygrassBlock;
import net.mcreator.elementure.block.MycenamossbrickwallBlock;
import net.mcreator.elementure.block.MycenamossbrickstairsBlock;
import net.mcreator.elementure.block.MycenamossbrickslabsBlock;
import net.mcreator.elementure.block.MycenamossbricksBlock;
import net.mcreator.elementure.block.MycenamemorialBlock;
import net.mcreator.elementure.block.MycenabrickPotBlock;
import net.mcreator.elementure.block.MycenaBiomeOmeganBlock;
import net.mcreator.elementure.block.MycenaBiomeAlphanBlock;
import net.mcreator.elementure.block.MushyslimeglueBlock;
import net.mcreator.elementure.block.MushroommemorialBlock;
import net.mcreator.elementure.block.MurkBlock;
import net.mcreator.elementure.block.MountainsmemorialBlock;
import net.mcreator.elementure.block.MinoskulltrophyBlock;
import net.mcreator.elementure.block.MinisunberrybushBlock;
import net.mcreator.elementure.block.MinistrawberrybushBlock;
import net.mcreator.elementure.block.MiniperryberrybushBlock;
import net.mcreator.elementure.block.MinigobberrybushBlock;
import net.mcreator.elementure.block.MinicoldberrybushBlock;
import net.mcreator.elementure.block.MiniblueberrybushBlock;
import net.mcreator.elementure.block.MinibilborrybushBlock;
import net.mcreator.elementure.block.MinibeestingberrybushBlock;
import net.mcreator.elementure.block.MerthiumoreBlock;
import net.mcreator.elementure.block.MerthiumblockBlock;
import net.mcreator.elementure.block.Memoryplant3Block;
import net.mcreator.elementure.block.Memoryplant2Block;
import net.mcreator.elementure.block.Memoryplant1Block;
import net.mcreator.elementure.block.MemoryheartBlock;
import net.mcreator.elementure.block.MemorycrystalshellBlock;
import net.mcreator.elementure.block.MemorycrystalBlock;
import net.mcreator.elementure.block.MagentarimevineBlock;
import net.mcreator.elementure.block.MagentarimemossBlock;
import net.mcreator.elementure.block.MagentarimefanBlock;
import net.mcreator.elementure.block.MagentarimebushBlock;
import net.mcreator.elementure.block.MagentabarrierclosingBlock;
import net.mcreator.elementure.block.MagentabarrierBlock;
import net.mcreator.elementure.block.MaelstromplanksBlock;
import net.mcreator.elementure.block.MaelstromlogBlock;
import net.mcreator.elementure.block.MaelstromleavesBlock;
import net.mcreator.elementure.block.LuckystarBlock;
import net.mcreator.elementure.block.LootedvillagerstatueBlock;
import net.mcreator.elementure.block.LimerimevineBlock;
import net.mcreator.elementure.block.LimerimemossBlock;
import net.mcreator.elementure.block.LimerimefanBlock;
import net.mcreator.elementure.block.LimerimebushBlock;
import net.mcreator.elementure.block.LimebarrierclosingBlock;
import net.mcreator.elementure.block.LimebarrierBlock;
import net.mcreator.elementure.block.LilypadsaplingBlock;
import net.mcreator.elementure.block.LilypadrimblockBlock;
import net.mcreator.elementure.block.LilypadplankslabsBlock;
import net.mcreator.elementure.block.LilypadplanksTrapdoorBlock;
import net.mcreator.elementure.block.LilypadplanksPressureplateBlock;
import net.mcreator.elementure.block.LilypadplanksGateBlock;
import net.mcreator.elementure.block.LilypadplanksFenceBlock;
import net.mcreator.elementure.block.LilypadplanksDoorBlock;
import net.mcreator.elementure.block.LilypadplanksButtonBlock;
import net.mcreator.elementure.block.LilypadplanksBlock;
import net.mcreator.elementure.block.LilypadplankStairsBlock;
import net.mcreator.elementure.block.LilypadlogFullBlock;
import net.mcreator.elementure.block.LilypadlogBlock;
import net.mcreator.elementure.block.LilypadblockBlock;
import net.mcreator.elementure.block.LigniteblockBlock;
import net.mcreator.elementure.block.LightruneblockBlock;
import net.mcreator.elementure.block.LightningruneblockBlock;
import net.mcreator.elementure.block.LightningelementliquidBlock;
import net.mcreator.elementure.block.LightningandesitetileswallsBlock;
import net.mcreator.elementure.block.LightningandesitetilesstairsBlock;
import net.mcreator.elementure.block.LightningandesitetilesslabsBlock;
import net.mcreator.elementure.block.LightningandesitetileBlock;
import net.mcreator.elementure.block.LightningandesiteoreBlock;
import net.mcreator.elementure.block.LightningandesitebrickswallsBlock;
import net.mcreator.elementure.block.LightningandesitebricksstairsBlock;
import net.mcreator.elementure.block.LightningandesitebricksslabsBlock;
import net.mcreator.elementure.block.LightningandesitebricksBlock;
import net.mcreator.elementure.block.LightningandesiteBlock;
import net.mcreator.elementure.block.LightgrayrimevineBlock;
import net.mcreator.elementure.block.LightgrayrimemossBlock;
import net.mcreator.elementure.block.LightgrayrimefanBlock;
import net.mcreator.elementure.block.LightgrayrimebushBlock;
import net.mcreator.elementure.block.LightgraybarrierclosingBlock;
import net.mcreator.elementure.block.LightgraybarrierBlock;
import net.mcreator.elementure.block.LightbluerimevineBlock;
import net.mcreator.elementure.block.LightbluerimemossBlock;
import net.mcreator.elementure.block.LightbluerimefanBlock;
import net.mcreator.elementure.block.LightbluerimebushBlock;
import net.mcreator.elementure.block.LightbluebarrierclosingBlock;
import net.mcreator.elementure.block.LightbluebarrierBlock;
import net.mcreator.elementure.block.LightBlueOstreeLeavesBlock;
import net.mcreator.elementure.block.JunglememorialBlock;
import net.mcreator.elementure.block.JumpstarBlock;
import net.mcreator.elementure.block.JellypoolsmemorialBlock;
import net.mcreator.elementure.block.JellyfloattendrilBlock;
import net.mcreator.elementure.block.JellyfloatslimeBlock;
import net.mcreator.elementure.block.JellyfloatlimbBlock;
import net.mcreator.elementure.block.JellyfloatlightBlock;
import net.mcreator.elementure.block.JellyfloatdarkBlock;
import net.mcreator.elementure.block.JellyfloatOmeganBlock;
import net.mcreator.elementure.block.JellyfloatBlock;
import net.mcreator.elementure.block.JellyfloatAlphanBlock;
import net.mcreator.elementure.block.IvoryspawnerBlock;
import net.mcreator.elementure.block.IvoryblockBlock;
import net.mcreator.elementure.block.InvisibleomeganBlock;
import net.mcreator.elementure.block.IcyslimeBlock;
import net.mcreator.elementure.block.IcespikesmemorialBlock;
import net.mcreator.elementure.block.IcespikesBlock;
import net.mcreator.elementure.block.IcemineBlock;
import net.mcreator.elementure.block.HealthstarBlock;
import net.mcreator.elementure.block.HauntedstatueBlock;
import net.mcreator.elementure.block.HastestarBlock;
import net.mcreator.elementure.block.GreenslimeturfBlock;
import net.mcreator.elementure.block.GreenslimesproutBlock;
import net.mcreator.elementure.block.GreenslimefolBlock;
import net.mcreator.elementure.block.GreenrimevineBlock;
import net.mcreator.elementure.block.GreenrimemossBlock;
import net.mcreator.elementure.block.GreenrimefanBlock;
import net.mcreator.elementure.block.GreenrimebushBlock;
import net.mcreator.elementure.block.GreenjellyblockBlock;
import net.mcreator.elementure.block.GreenbarrierclosingBlock;
import net.mcreator.elementure.block.GreenbarrierBlock;
import net.mcreator.elementure.block.GrayrimevineBlock;
import net.mcreator.elementure.block.GrayrimemossBlock;
import net.mcreator.elementure.block.GrayrimefanBlock;
import net.mcreator.elementure.block.GrayrimebushBlock;
import net.mcreator.elementure.block.GraybarrierclosingBlock;
import net.mcreator.elementure.block.GraybarrierBlock;
import net.mcreator.elementure.block.GobberrybushBlock;
import net.mcreator.elementure.block.GleamingobsidianBlock;
import net.mcreator.elementure.block.GlasslightburnerBlock;
import net.mcreator.elementure.block.GlasslightbrewerBlock;
import net.mcreator.elementure.block.GlasslightBlock;
import net.mcreator.elementure.block.FumingsparklingstarsBlock;
import net.mcreator.elementure.block.FrostyicealphanBlock;
import net.mcreator.elementure.block.ForgottenOmeganBlock;
import net.mcreator.elementure.block.ForestmemorialBlock;
import net.mcreator.elementure.block.FlutaniteoreBlock;
import net.mcreator.elementure.block.FlutaniteblockBlock;
import net.mcreator.elementure.block.FluffstairplanksBlock;
import net.mcreator.elementure.block.FluffslabplanksBlock;
import net.mcreator.elementure.block.FluffsaplingBlock;
import net.mcreator.elementure.block.FluffplanktrapdoorBlock;
import net.mcreator.elementure.block.FluffplanksBlock;
import net.mcreator.elementure.block.FluffplankpressureplateBlock;
import net.mcreator.elementure.block.FluffplankfenceBlock;
import net.mcreator.elementure.block.FluffplankdoorBlock;
import net.mcreator.elementure.block.FluffplankbuttonBlock;
import net.mcreator.elementure.block.FlufflogfullBlock;
import net.mcreator.elementure.block.FlufflogBlock;
import net.mcreator.elementure.block.FluffleavesBlock;
import net.mcreator.elementure.block.FluffgateplanksBlock;
import net.mcreator.elementure.block.FishaltarBlock;
import net.mcreator.elementure.block.FirestarBlock;
import net.mcreator.elementure.block.FireruneblockBlock;
import net.mcreator.elementure.block.FireliquidBlock;
import net.mcreator.elementure.block.FerziumoreBlock;
import net.mcreator.elementure.block.FerziumblockBlock;
import net.mcreator.elementure.block.EnergyruneblockBlock;
import net.mcreator.elementure.block.EnergydioritetileWallsBlock;
import net.mcreator.elementure.block.EnergydioritetileStairsBlock;
import net.mcreator.elementure.block.EnergydioritetileSlabsBlock;
import net.mcreator.elementure.block.EnergydioritetileBlock;
import net.mcreator.elementure.block.EnergydioritebricksWallsBlock;
import net.mcreator.elementure.block.EnergydioritebricksStairsBlock;
import net.mcreator.elementure.block.EnergydioritebricksSlabsBlock;
import net.mcreator.elementure.block.EnergydioritebricksBlock;
import net.mcreator.elementure.block.EnergydioriteBlock;
import net.mcreator.elementure.block.EndermemorialBlock;
import net.mcreator.elementure.block.EmptynestCobblestoneBlock;
import net.mcreator.elementure.block.EmptiedbedrockBlock;
import net.mcreator.elementure.block.ElementalaltarbaseBlock;
import net.mcreator.elementure.block.EarthruneblockBlock;
import net.mcreator.elementure.block.EarthelementliquidBlock;
import net.mcreator.elementure.block.DustfluxoreBlock;
import net.mcreator.elementure.block.DustfluxblockBlock;
import net.mcreator.elementure.block.DungeonwaterBlock;
import net.mcreator.elementure.block.DungeonlanternBlock;
import net.mcreator.elementure.block.DungeonhatchLockedBlock;
import net.mcreator.elementure.block.DungeonhatchBlock;
import net.mcreator.elementure.block.DryseafoamBlock;
import net.mcreator.elementure.block.DreadweedBlock;
import net.mcreator.elementure.block.DragonewtscalesBlockBlock;
import net.mcreator.elementure.block.DivingvineBlock;
import net.mcreator.elementure.block.DivingvineBearingBlock;
import net.mcreator.elementure.block.DiversstoneBlock;
import net.mcreator.elementure.block.DiverscrownOmeganBlock;
import net.mcreator.elementure.block.DiverscrownMemorialBlock;
import net.mcreator.elementure.block.DiversalloyBlockBlock;
import net.mcreator.elementure.block.DirecrypttilesWallBlock;
import net.mcreator.elementure.block.DirecrypttilesStairsBlock;
import net.mcreator.elementure.block.DirecrypttilesSlabBlock;
import net.mcreator.elementure.block.DirecrypttilesBlock;
import net.mcreator.elementure.block.Direcrypttiles2WallBlock;
import net.mcreator.elementure.block.Direcrypttiles2StairsBlock;
import net.mcreator.elementure.block.Direcrypttiles2SlabBlock;
import net.mcreator.elementure.block.Direcrypttiles2Block;
import net.mcreator.elementure.block.DirecryptbricksWallBlock;
import net.mcreator.elementure.block.DirecryptbricksStairsBlock;
import net.mcreator.elementure.block.DirecryptbricksSlabBlock;
import net.mcreator.elementure.block.DirecryptbricksSecretBlock;
import net.mcreator.elementure.block.DirecryptbricksBlock;
import net.mcreator.elementure.block.Direcryptbricks2WallBlock;
import net.mcreator.elementure.block.Direcryptbricks2StairsBlock;
import net.mcreator.elementure.block.Direcryptbricks2SlabBlock;
import net.mcreator.elementure.block.Direcryptbricks2SecretBlock;
import net.mcreator.elementure.block.Direcryptbricks2Block;
import net.mcreator.elementure.block.DesertmemorialBlock;
import net.mcreator.elementure.block.DensenetherumshinyBlock;
import net.mcreator.elementure.block.DensenetherumBlock;
import net.mcreator.elementure.block.DeepvamiteoreBlock;
import net.mcreator.elementure.block.DeepslatebrickPotBlock;
import net.mcreator.elementure.block.DeepshimmeringoreBlock;
import net.mcreator.elementure.block.DeepnoobiumoreBlock;
import net.mcreator.elementure.block.DeepmerthiumoreBlock;
import net.mcreator.elementure.block.DeepflutaniteoreBlock;
import net.mcreator.elementure.block.DeepferziumoreBlock;
import net.mcreator.elementure.block.DeepdiversstoneBlock;
import net.mcreator.elementure.block.DeepbrineBlock;
import net.mcreator.elementure.block.DebrisscrapsBlock;
import net.mcreator.elementure.block.DebrisscrapbricksBlock;
import net.mcreator.elementure.block.DazzlingblockBlock;
import net.mcreator.elementure.block.DarkwaterBlock;
import net.mcreator.elementure.block.DarkruneblockBlock;
import net.mcreator.elementure.block.DarkgemblockBlock;
import net.mcreator.elementure.block.DarkgemCrystalBlock;
import net.mcreator.elementure.block.DarkgemCrystalBeamBlock;
import net.mcreator.elementure.block.DarkbumredappleBlock;
import net.mcreator.elementure.block.DarkbumgoldenappleBlock;
import net.mcreator.elementure.block.DarkbumgiveBlock;
import net.mcreator.elementure.block.DarkbumBlock;
import net.mcreator.elementure.block.DarkBlock;
import net.mcreator.elementure.block.CyanrimevineBlock;
import net.mcreator.elementure.block.CyanrimemossBlock;
import net.mcreator.elementure.block.CyanrimefanBlock;
import net.mcreator.elementure.block.CyanrimebushBlock;
import net.mcreator.elementure.block.CyanbarrierclosingBlock;
import net.mcreator.elementure.block.CyanbarrierBlock;
import net.mcreator.elementure.block.CutCloudSandstoneWallBlock;
import net.mcreator.elementure.block.CutCloudSandstoneStairsBlock;
import net.mcreator.elementure.block.CutCloudSandstoneSlabBlock;
import net.mcreator.elementure.block.CutCloudSandstoneBlock;
import net.mcreator.elementure.block.CursedplanksBlock;
import net.mcreator.elementure.block.Cursedmemoryplant3Block;
import net.mcreator.elementure.block.Cursedmemoryplant2Block;
import net.mcreator.elementure.block.Cursedmemoryplant1Block;
import net.mcreator.elementure.block.CursedlogBlock;
import net.mcreator.elementure.block.CursedleavesBlock;
import net.mcreator.elementure.block.CursedeyelogBlock;
import net.mcreator.elementure.block.CrystalpalaceskyBlock;
import net.mcreator.elementure.block.CrimsonforestmemorialBlock;
import net.mcreator.elementure.block.CrackingiceBlock;
import net.mcreator.elementure.block.Crackingice5Block;
import net.mcreator.elementure.block.Crackingice4Block;
import net.mcreator.elementure.block.Crackingice3Block;
import net.mcreator.elementure.block.Crackingice2Block;
import net.mcreator.elementure.block.CrabpotBlock;
import net.mcreator.elementure.block.CorruptlogBlock;
import net.mcreator.elementure.block.CorruptleavesBlock;
import net.mcreator.elementure.block.CorrupticeBlock;
import net.mcreator.elementure.block.CorruptgrassplantBlock;
import net.mcreator.elementure.block.CorruptgrassBlock;
import net.mcreator.elementure.block.CorruptflowereastereggBlock;
import net.mcreator.elementure.block.CorruptflowerBlock;
import net.mcreator.elementure.block.CorruptdewBlock;
import net.mcreator.elementure.block.CormunculusblockBlock;
import net.mcreator.elementure.block.Corememoryplant3Block;
import net.mcreator.elementure.block.Corememoryplant2Block;
import net.mcreator.elementure.block.Corememoryplant1Block;
import net.mcreator.elementure.block.ColoredprismaticcrystalblockBlock;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock9Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock8Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock7Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock6Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock5Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock4Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock3Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock2Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock25Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock24Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock23Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock22Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock21Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock20Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock19Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock18Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock17Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock16Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock15Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock14Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock13Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock12Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock11Block;
import net.mcreator.elementure.block.Coloredprismaticcrystalblock10Block;
import net.mcreator.elementure.block.ColdberrybushBlock;
import net.mcreator.elementure.block.CloudsandBlock;
import net.mcreator.elementure.block.CloudgeyserblockBlock;
import net.mcreator.elementure.block.CloudblockBlock;
import net.mcreator.elementure.block.CloudSandstoneWallsBlock;
import net.mcreator.elementure.block.CloudSandstoneStairBlock;
import net.mcreator.elementure.block.CloudSandstoneSlabsBlock;
import net.mcreator.elementure.block.CloudSandstoneBlock;
import net.mcreator.elementure.block.ChiseledruinedgraniteBlock;
import net.mcreator.elementure.block.ChiseledlightningandesiteBlock;
import net.mcreator.elementure.block.ChiseledenergydioriteBlock;
import net.mcreator.elementure.block.ChiseledCloudSandstoneBlock;
import net.mcreator.elementure.block.CheckingblockalphanBlock;
import net.mcreator.elementure.block.BurningtarblockBlock;
import net.mcreator.elementure.block.BurningdarkstoneBlock;
import net.mcreator.elementure.block.Buriedrustyironsword2Block;
import net.mcreator.elementure.block.Buriedrustyironsword1Block;
import net.mcreator.elementure.block.BrownrimevineBlock;
import net.mcreator.elementure.block.BrownrimemossBlock;
import net.mcreator.elementure.block.BrownrimefanBlock;
import net.mcreator.elementure.block.BrownrimebushBlock;
import net.mcreator.elementure.block.BrownbarrierclosingBlock;
import net.mcreator.elementure.block.BrownbarrierBlock;
import net.mcreator.elementure.block.BrontiumblockBlock;
import net.mcreator.elementure.block.BoardingschoolYellowWallStairsBlock;
import net.mcreator.elementure.block.BoardingschoolYellowWallSlabsBlock;
import net.mcreator.elementure.block.BoardingschoolYellowWallBlock;
import net.mcreator.elementure.block.BoardingschoolWhitebrickBlocksBlock;
import net.mcreator.elementure.block.BoardingschoolWhiteWallStairsBlock;
import net.mcreator.elementure.block.BoardingschoolWhiteWallSlabsBlock;
import net.mcreator.elementure.block.BoardingschoolWhiteWallBlock;
import net.mcreator.elementure.block.BoardingschoolWhiteBrickStairsBlock;
import net.mcreator.elementure.block.BoardingschoolWhiteBrickSlabsBlock;
import net.mcreator.elementure.block.BoardingschoolRustBlocksBlock;
import net.mcreator.elementure.block.BoardingschoolRustBlockStairsBlock;
import net.mcreator.elementure.block.BoardingschoolRustBlockSlabsBlock;
import net.mcreator.elementure.block.BoardingschoolRoof1StairsBlock;
import net.mcreator.elementure.block.BoardingschoolRoof1SlabsBlock;
import net.mcreator.elementure.block.BoardingschoolRoof1Block;
import net.mcreator.elementure.block.BoardingschoolPlanksStairsBlock;
import net.mcreator.elementure.block.BoardingschoolPlanksSlabsBlock;
import net.mcreator.elementure.block.BoardingschoolPlanksBlock;
import net.mcreator.elementure.block.BoardingschoolPinkWallStairsBlock;
import net.mcreator.elementure.block.BoardingschoolPinkWallSlabsBlock;
import net.mcreator.elementure.block.BoardingschoolPinkWallBlock;
import net.mcreator.elementure.block.BoardingschoolGrayconcreteBlock;
import net.mcreator.elementure.block.BoardingschoolGrayConcreteStairsBlock;
import net.mcreator.elementure.block.BoardingschoolGrayConcreteSlabsBlock;
import net.mcreator.elementure.block.BoardingschoolDirtStairsBlock;
import net.mcreator.elementure.block.BoardingschoolDirtSlabsBlock;
import net.mcreator.elementure.block.BoardingschoolDirtBlock;
import net.mcreator.elementure.block.BoardingschoolBluewallStairsBlock;
import net.mcreator.elementure.block.BoardingschoolBluewallSlabsBlock;
import net.mcreator.elementure.block.BoardingschoolBlueWallBlock;
import net.mcreator.elementure.block.BluethornsaplingBlock;
import net.mcreator.elementure.block.BluethornleavesBlock;
import net.mcreator.elementure.block.BlueslimeturfBlock;
import net.mcreator.elementure.block.BlueslimesproutBlock;
import net.mcreator.elementure.block.BlueslimefolBlock;
import net.mcreator.elementure.block.BluerimevineBlock;
import net.mcreator.elementure.block.BluerimemossBlock;
import net.mcreator.elementure.block.BluerimefanBlock;
import net.mcreator.elementure.block.BluerimebushBlock;
import net.mcreator.elementure.block.BluejellyblockBlock;
import net.mcreator.elementure.block.BluedoorPortalBlock;
import net.mcreator.elementure.block.BluedoorBlock;
import net.mcreator.elementure.block.BlueberrybushBlock;
import net.mcreator.elementure.block.BluebarrierclosingBlock;
import net.mcreator.elementure.block.BluebarrierBlock;
import net.mcreator.elementure.block.BlueamberblockBlock;
import net.mcreator.elementure.block.BlueOstreeLeavesBlock;
import net.mcreator.elementure.block.BlazingnetherumshinyBlock;
import net.mcreator.elementure.block.BlazingnetherumBlock;
import net.mcreator.elementure.block.BlackrimevineBlock;
import net.mcreator.elementure.block.BlackrimemossBlock;
import net.mcreator.elementure.block.BlackrimefanBlock;
import net.mcreator.elementure.block.BlackrimebushBlock;
import net.mcreator.elementure.block.BlackbarrierclosingBlock;
import net.mcreator.elementure.block.BlackbarrierBlock;
import net.mcreator.elementure.block.BirthingmoduleBlock;
import net.mcreator.elementure.block.BilborrybushBlock;
import net.mcreator.elementure.block.BigglowingmushroomBlock;
import net.mcreator.elementure.block.BeestingberrybushBlock;
import net.mcreator.elementure.block.BeachstarsBlock;
import net.mcreator.elementure.block.BasaltdeltamemorialBlock;
import net.mcreator.elementure.block.BadlandsmemorialBlock;
import net.mcreator.elementure.block.BabynetherstarshinyBlock;
import net.mcreator.elementure.block.BabynetherstarblockBlock;
import net.mcreator.elementure.block.AurumtilesBlock;
import net.mcreator.elementure.block.AurumbricksBlock;
import net.mcreator.elementure.block.AurumblockBlock;
import net.mcreator.elementure.block.AnnimatedstatueblockBlock;
import net.mcreator.elementure.block.AnimochromaticprismaticcrystalblockBlock;
import net.mcreator.elementure.block.AltarbrickwallsBlock;
import net.mcreator.elementure.block.AltarbrickstairsBlock;
import net.mcreator.elementure.block.AltarbrickslabsBlock;
import net.mcreator.elementure.block.AltarbricksBlock;
import net.mcreator.elementure.block.AirruneblockBlock;
import net.mcreator.elementure.block.AirelementliquidBlock;
import net.mcreator.elementure.block.ActivenetherumshinyBlock;
import net.mcreator.elementure.block.ActivenetherumBlock;
import net.mcreator.elementure.block.AbyssportalblockBlock;
import net.mcreator.elementure.block.AbyssaltntBlock;
import net.mcreator.elementure.block.AbyssalspotterBlock;
import net.mcreator.elementure.block.AbyssalspawnerBlock;
import net.mcreator.elementure.block.AbyssalplanksBlock;
import net.mcreator.elementure.block.AbyssalgasBlock;
import net.mcreator.elementure.block.AbyssalfireBlock;
import net.mcreator.elementure.block.AbyssalcorruptionBlock;
import net.mcreator.elementure.block.AbsorptionstarBlock;
import net.mcreator.elementure.ElementureMod;

public class ElementureModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, ElementureMod.MODID);
	public static final RegistryObject<Block> DARK = REGISTRY.register("dark", () -> new DarkBlock());
	public static final RegistryObject<Block> SILVERBLOCK = REGISTRY.register("silverblock", () -> new SilverblockBlock());
	public static final RegistryObject<Block> NEONINGOTBLOCK = REGISTRY.register("neoningotblock", () -> new NeoningotblockBlock());
	public static final RegistryObject<Block> MINISTRAWBERRYBUSH = REGISTRY.register("ministrawberrybush", () -> new MinistrawberrybushBlock());
	public static final RegistryObject<Block> STRAWBERRYBUSH = REGISTRY.register("strawberrybush", () -> new StrawberrybushBlock());
	public static final RegistryObject<Block> BEESTINGBERRYBUSH = REGISTRY.register("beestingberrybush", () -> new BeestingberrybushBlock());
	public static final RegistryObject<Block> MINIBEESTINGBERRYBUSH = REGISTRY.register("minibeestingberrybush", () -> new MinibeestingberrybushBlock());
	public static final RegistryObject<Block> PERRYBERRYBUSH = REGISTRY.register("perryberrybush", () -> new PerryberrybushBlock());
	public static final RegistryObject<Block> MINIPERRYBERRYBUSH = REGISTRY.register("miniperryberrybush", () -> new MiniperryberrybushBlock());
	public static final RegistryObject<Block> BLUEBERRYBUSH = REGISTRY.register("blueberrybush", () -> new BlueberrybushBlock());
	public static final RegistryObject<Block> MINIBLUEBERRYBUSH = REGISTRY.register("miniblueberrybush", () -> new MiniblueberrybushBlock());
	public static final RegistryObject<Block> MUSHYSLIMEGLUE = REGISTRY.register("mushyslimeglue", () -> new MushyslimeglueBlock());
	public static final RegistryObject<Block> MAELSTROMLOG = REGISTRY.register("maelstromlog", () -> new MaelstromlogBlock());
	public static final RegistryObject<Block> MAELSTROMPLANKS = REGISTRY.register("maelstromplanks", () -> new MaelstromplanksBlock());
	public static final RegistryObject<Block> MAELSTROMLEAVES = REGISTRY.register("maelstromleaves", () -> new MaelstromleavesBlock());
	public static final RegistryObject<Block> SHARDLESSMAELSTROMLOG = REGISTRY.register("shardlessmaelstromlog", () -> new ShardlessmaelstromlogBlock());
	public static final RegistryObject<Block> FLUTANITEBLOCK = REGISTRY.register("flutaniteblock", () -> new FlutaniteblockBlock());
	public static final RegistryObject<Block> ABYSSALSPOTTER = REGISTRY.register("abyssalspotter", () -> new AbyssalspotterBlock());
	public static final RegistryObject<Block> ABYSSALSPAWNER = REGISTRY.register("abyssalspawner", () -> new AbyssalspawnerBlock());
	public static final RegistryObject<Block> CORRUPTICE = REGISTRY.register("corruptice", () -> new CorrupticeBlock());
	public static final RegistryObject<Block> CORRUPTGRASS = REGISTRY.register("corruptgrass", () -> new CorruptgrassBlock());
	public static final RegistryObject<Block> CORRUPTGRASSPLANT = REGISTRY.register("corruptgrassplant", () -> new CorruptgrassplantBlock());
	public static final RegistryObject<Block> CORRUPTFLOWER = REGISTRY.register("corruptflower", () -> new CorruptflowerBlock());
	public static final RegistryObject<Block> CORRUPTLOG = REGISTRY.register("corruptlog", () -> new CorruptlogBlock());
	public static final RegistryObject<Block> CORRUPTLEAVES = REGISTRY.register("corruptleaves", () -> new CorruptleavesBlock());
	public static final RegistryObject<Block> MURK = REGISTRY.register("murk", () -> new MurkBlock());
	public static final RegistryObject<Block> ANNIMATEDSTATUEBLOCK = REGISTRY.register("annimatedstatueblock", () -> new AnnimatedstatueblockBlock());
	public static final RegistryObject<Block> LOOTEDVILLAGERSTATUE = REGISTRY.register("lootedvillagerstatue", () -> new LootedvillagerstatueBlock());
	public static final RegistryObject<Block> ROTTENDEMONHEART = REGISTRY.register("rottendemonheart", () -> new RottendemonheartBlock());
	public static final RegistryObject<Block> ABSORPTIONSTAR = REGISTRY.register("absorptionstar", () -> new AbsorptionstarBlock());
	public static final RegistryObject<Block> FIRESTAR = REGISTRY.register("firestar", () -> new FirestarBlock());
	public static final RegistryObject<Block> HASTESTAR = REGISTRY.register("hastestar", () -> new HastestarBlock());
	public static final RegistryObject<Block> HEALTHSTAR = REGISTRY.register("healthstar", () -> new HealthstarBlock());
	public static final RegistryObject<Block> JUMPSTAR = REGISTRY.register("jumpstar", () -> new JumpstarBlock());
	public static final RegistryObject<Block> LUCKYSTAR = REGISTRY.register("luckystar", () -> new LuckystarBlock());
	public static final RegistryObject<Block> RESISTANCESTAR = REGISTRY.register("resistancestar", () -> new ResistancestarBlock());
	public static final RegistryObject<Block> SATURATIONSTAR = REGISTRY.register("saturationstar", () -> new SaturationstarBlock());
	public static final RegistryObject<Block> SPEEDSTAR = REGISTRY.register("speedstar", () -> new SpeedstarBlock());
	public static final RegistryObject<Block> STRENGHTSTAR = REGISTRY.register("strenghtstar", () -> new StrenghtstarBlock());
	public static final RegistryObject<Block> VISIONSTAR = REGISTRY.register("visionstar", () -> new VisionstarBlock());
	public static final RegistryObject<Block> WATERSTAR = REGISTRY.register("waterstar", () -> new WaterstarBlock());
	public static final RegistryObject<Block> ABYSSALCORRUPTION = REGISTRY.register("abyssalcorruption", () -> new AbyssalcorruptionBlock());
	public static final RegistryObject<Block> ABYSSALPLANKS = REGISTRY.register("abyssalplanks", () -> new AbyssalplanksBlock());
	public static final RegistryObject<Block> DREADWEED = REGISTRY.register("dreadweed", () -> new DreadweedBlock());
	public static final RegistryObject<Block> ABYSSALGAS = REGISTRY.register("abyssalgas", () -> new AbyssalgasBlock());
	public static final RegistryObject<Block> ABYSSALTNT = REGISTRY.register("abyssaltnt", () -> new AbyssaltntBlock());
	public static final RegistryObject<Block> ICYSLIME = REGISTRY.register("icyslime", () -> new IcyslimeBlock());
	public static final RegistryObject<Block> RUNEBLOCK = REGISTRY.register("runeblock", () -> new RuneblockBlock());
	public static final RegistryObject<Block> FIRERUNEBLOCK = REGISTRY.register("fireruneblock", () -> new FireruneblockBlock());
	public static final RegistryObject<Block> EARTHRUNEBLOCK = REGISTRY.register("earthruneblock", () -> new EarthruneblockBlock());
	public static final RegistryObject<Block> WATERRUNEBLOCK = REGISTRY.register("waterruneblock", () -> new WaterruneblockBlock());
	public static final RegistryObject<Block> AIRRUNEBLOCK = REGISTRY.register("airruneblock", () -> new AirruneblockBlock());
	public static final RegistryObject<Block> LIGHTNINGRUNEBLOCK = REGISTRY.register("lightningruneblock", () -> new LightningruneblockBlock());
	public static final RegistryObject<Block> RUNEBRICKS = REGISTRY.register("runebricks", () -> new RunebricksBlock());
	public static final RegistryObject<Block> RUNEBRICKSCHISELED = REGISTRY.register("runebrickschiseled", () -> new RunebrickschiseledBlock());
	public static final RegistryObject<Block> OMEGANCENTER = REGISTRY.register("omegancenter", () -> new OmegancenterBlock());
	public static final RegistryObject<Block> ENERGYDIORITE = REGISTRY.register("energydiorite", () -> new EnergydioriteBlock());
	public static final RegistryObject<Block> LIGHTNINGANDESITE = REGISTRY.register("lightningandesite", () -> new LightningandesiteBlock());
	public static final RegistryObject<Block> RUINGRANITE = REGISTRY.register("ruingranite", () -> new RuingraniteBlock());
	public static final RegistryObject<Block> BLACKBARRIER = REGISTRY.register("blackbarrier", () -> new BlackbarrierBlock());
	public static final RegistryObject<Block> BLUEBARRIER = REGISTRY.register("bluebarrier", () -> new BluebarrierBlock());
	public static final RegistryObject<Block> BROWNBARRIER = REGISTRY.register("brownbarrier", () -> new BrownbarrierBlock());
	public static final RegistryObject<Block> CYANBARRIER = REGISTRY.register("cyanbarrier", () -> new CyanbarrierBlock());
	public static final RegistryObject<Block> GRAYBARRIER = REGISTRY.register("graybarrier", () -> new GraybarrierBlock());
	public static final RegistryObject<Block> GREENBARRIER = REGISTRY.register("greenbarrier", () -> new GreenbarrierBlock());
	public static final RegistryObject<Block> LIGHTBLUEBARRIER = REGISTRY.register("lightbluebarrier", () -> new LightbluebarrierBlock());
	public static final RegistryObject<Block> LIGHTGRAYBARRIER = REGISTRY.register("lightgraybarrier", () -> new LightgraybarrierBlock());
	public static final RegistryObject<Block> LIMEBARRIER = REGISTRY.register("limebarrier", () -> new LimebarrierBlock());
	public static final RegistryObject<Block> MAGENTABARRIER = REGISTRY.register("magentabarrier", () -> new MagentabarrierBlock());
	public static final RegistryObject<Block> ORANGEBARRIER = REGISTRY.register("orangebarrier", () -> new OrangebarrierBlock());
	public static final RegistryObject<Block> PINKBARRIER = REGISTRY.register("pinkbarrier", () -> new PinkbarrierBlock());
	public static final RegistryObject<Block> PURPLEBARRIER = REGISTRY.register("purplebarrier", () -> new PurplebarrierBlock());
	public static final RegistryObject<Block> REDBARRIER = REGISTRY.register("redbarrier", () -> new RedbarrierBlock());
	public static final RegistryObject<Block> WHITEBARRIER = REGISTRY.register("whitebarrier", () -> new WhitebarrierBlock());
	public static final RegistryObject<Block> YELLOWBARRIER = REGISTRY.register("yellowbarrier", () -> new YellowbarrierBlock());
	public static final RegistryObject<Block> BURIEDRUSTYIRONSWORD_1 = REGISTRY.register("buriedrustyironsword_1", () -> new Buriedrustyironsword1Block());
	public static final RegistryObject<Block> BURIEDRUSTYIRONSWORD_2 = REGISTRY.register("buriedrustyironsword_2", () -> new Buriedrustyironsword2Block());
	public static final RegistryObject<Block> ELEMENTALALTARBASE = REGISTRY.register("elementalaltarbase", () -> new ElementalaltarbaseBlock());
	public static final RegistryObject<Block> TIER_1HARVESTEDWATERELEMENT = REGISTRY.register("tier_1harvestedwaterelement", () -> new Tier1harvestedwaterelementBlock());
	public static final RegistryObject<Block> TIER_1HARVESTEDFIREELEMENT = REGISTRY.register("tier_1harvestedfireelement", () -> new Tier1harvestedfireelementBlock());
	public static final RegistryObject<Block> TIER_1HARVESTEDEARTHELEMENT = REGISTRY.register("tier_1harvestedearthelement", () -> new Tier1harvestedearthelementBlock());
	public static final RegistryObject<Block> TIER_1HARVESTEDAIRELEMENT = REGISTRY.register("tier_1harvestedairelement", () -> new Tier1harvestedairelementBlock());
	public static final RegistryObject<Block> TIER_1HARVESTEDLIGHTNINGELEMENT = REGISTRY.register("tier_1harvestedlightningelement", () -> new Tier1harvestedlightningelementBlock());
	public static final RegistryObject<Block> BIGGLOWINGMUSHROOM = REGISTRY.register("bigglowingmushroom", () -> new BigglowingmushroomBlock());
	public static final RegistryObject<Block> CURSEDEYELOG = REGISTRY.register("cursedeyelog", () -> new CursedeyelogBlock());
	public static final RegistryObject<Block> CURSEDLOG = REGISTRY.register("cursedlog", () -> new CursedlogBlock());
	public static final RegistryObject<Block> CURSEDPLANKS = REGISTRY.register("cursedplanks", () -> new CursedplanksBlock());
	public static final RegistryObject<Block> CURSEDLEAVES = REGISTRY.register("cursedleaves", () -> new CursedleavesBlock());
	public static final RegistryObject<Block> DARKBUM = REGISTRY.register("darkbum", () -> new DarkbumBlock());
	public static final RegistryObject<Block> VOIDRUNEBLOCK = REGISTRY.register("voidruneblock", () -> new VoidruneblockBlock());
	public static final RegistryObject<Block> ENERGYRUNEBLOCK = REGISTRY.register("energyruneblock", () -> new EnergyruneblockBlock());
	public static final RegistryObject<Block> LIGHTRUNEBLOCK = REGISTRY.register("lightruneblock", () -> new LightruneblockBlock());
	public static final RegistryObject<Block> DARKRUNEBLOCK = REGISTRY.register("darkruneblock", () -> new DarkruneblockBlock());
	public static final RegistryObject<Block> DUSTFLUXBLOCK = REGISTRY.register("dustfluxblock", () -> new DustfluxblockBlock());
	public static final RegistryObject<Block> LIGNITEBLOCK = REGISTRY.register("ligniteblock", () -> new LigniteblockBlock());
	public static final RegistryObject<Block> PITSTONE = REGISTRY.register("pitstone", () -> new PitstoneBlock());
	public static final RegistryObject<Block> VAMITEBLOCK = REGISTRY.register("vamiteblock", () -> new VamiteblockBlock());
	public static final RegistryObject<Block> FERZIUMBLOCK = REGISTRY.register("ferziumblock", () -> new FerziumblockBlock());
	public static final RegistryObject<Block> MERTHIUMBLOCK = REGISTRY.register("merthiumblock", () -> new MerthiumblockBlock());
	public static final RegistryObject<Block> CRACKINGICE = REGISTRY.register("crackingice", () -> new CrackingiceBlock());
	public static final RegistryObject<Block> ICESPIKES = REGISTRY.register("icespikes", () -> new IcespikesBlock());
	public static final RegistryObject<Block> ICEMINE = REGISTRY.register("icemine", () -> new IcemineBlock());
	public static final RegistryObject<Block> POLISHEDRUINGRANITE = REGISTRY.register("polishedruingranite", () -> new PolishedruingraniteBlock());
	public static final RegistryObject<Block> CHISELEDRUINEDGRANITE = REGISTRY.register("chiseledruinedgranite", () -> new ChiseledruinedgraniteBlock());
	public static final RegistryObject<Block> NOOBIUMBLOCK = REGISTRY.register("noobiumblock", () -> new NoobiumblockBlock());
	public static final RegistryObject<Block> MYCENASHROOMBLOCK = REGISTRY.register("mycenashroomblock", () -> new MycenashroomblockBlock());
	public static final RegistryObject<Block> MYCENAVINE = REGISTRY.register("mycenavine", () -> new MycenavineBlock());
	public static final RegistryObject<Block> MYCENASPROUTS = REGISTRY.register("mycenasprouts", () -> new MycenasproutsBlock());
	public static final RegistryObject<Block> MYCENIUM = REGISTRY.register("mycenium", () -> new MyceniumBlock());
	public static final RegistryObject<Block> MYCENAMOSSYGRASS = REGISTRY.register("mycenamossygrass", () -> new MycenamossygrassBlock());
	public static final RegistryObject<Block> MYCENIUMMOSS = REGISTRY.register("myceniummoss", () -> new MyceniummossBlock());
	public static final RegistryObject<Block> MYCENANALLOYBLOCK = REGISTRY.register("mycenanalloyblock", () -> new MycenanalloyblockBlock());
	public static final RegistryObject<Block> DAZZLINGBLOCK = REGISTRY.register("dazzlingblock", () -> new DazzlingblockBlock());
	public static final RegistryObject<Block> MYCENAMOSSBRICKS = REGISTRY.register("mycenamossbricks", () -> new MycenamossbricksBlock());
	public static final RegistryObject<Block> MYCENAMOSSBRICKSTAIRS = REGISTRY.register("mycenamossbrickstairs", () -> new MycenamossbrickstairsBlock());
	public static final RegistryObject<Block> MYCENAMOSSBRICKSLABS = REGISTRY.register("mycenamossbrickslabs", () -> new MycenamossbrickslabsBlock());
	public static final RegistryObject<Block> MYCENAMOSSBRICKWALL = REGISTRY.register("mycenamossbrickwall", () -> new MycenamossbrickwallBlock());
	public static final RegistryObject<Block> POLISHEDENERGYDIORITE = REGISTRY.register("polishedenergydiorite", () -> new PolishedenergydioriteBlock());
	public static final RegistryObject<Block> CHISELEDENERGYDIORITE = REGISTRY.register("chiseledenergydiorite", () -> new ChiseledenergydioriteBlock());
	public static final RegistryObject<Block> POLISHEDLIGHTNINGANDESITE = REGISTRY.register("polishedlightningandesite", () -> new PolishedlightningandesiteBlock());
	public static final RegistryObject<Block> CHISELEDLIGHTNINGANDESITE = REGISTRY.register("chiseledlightningandesite", () -> new ChiseledlightningandesiteBlock());
	public static final RegistryObject<Block> MEMORYHEART = REGISTRY.register("memoryheart", () -> new MemoryheartBlock());
	public static final RegistryObject<Block> BRONTIUMBLOCK = REGISTRY.register("brontiumblock", () -> new BrontiumblockBlock());
	public static final RegistryObject<Block> ENDERMEMORIAL = REGISTRY.register("endermemorial", () -> new EndermemorialBlock());
	public static final RegistryObject<Block> STONEMEMORYMATRIX = REGISTRY.register("stonememorymatrix", () -> new StonememorymatrixBlock());
	public static final RegistryObject<Block> PLAINSMEMORIAL = REGISTRY.register("plainsmemorial", () -> new PlainsmemorialBlock());
	public static final RegistryObject<Block> ICESPIKESMEMORIAL = REGISTRY.register("icespikesmemorial", () -> new IcespikesmemorialBlock());
	public static final RegistryObject<Block> SWAMPMEMORIAL = REGISTRY.register("swampmemorial", () -> new SwampmemorialBlock());
	public static final RegistryObject<Block> MYCENAMEMORIAL = REGISTRY.register("mycenamemorial", () -> new MycenamemorialBlock());
	public static final RegistryObject<Block> MOUNTAINSMEMORIAL = REGISTRY.register("mountainsmemorial", () -> new MountainsmemorialBlock());
	public static final RegistryObject<Block> SNOWYMEMORIAL = REGISTRY.register("snowymemorial", () -> new SnowymemorialBlock());
	public static final RegistryObject<Block> NETHERMEMORIAL = REGISTRY.register("nethermemorial", () -> new NethermemorialBlock());
	public static final RegistryObject<Block> MUSHROOMMEMORIAL = REGISTRY.register("mushroommemorial", () -> new MushroommemorialBlock());
	public static final RegistryObject<Block> OCEANMEMORIAL = REGISTRY.register("oceanmemorial", () -> new OceanmemorialBlock());
	public static final RegistryObject<Block> BADLANDSMEMORIAL = REGISTRY.register("badlandsmemorial", () -> new BadlandsmemorialBlock());
	public static final RegistryObject<Block> DESERTMEMORIAL = REGISTRY.register("desertmemorial", () -> new DesertmemorialBlock());
	public static final RegistryObject<Block> JUNGLEMEMORIAL = REGISTRY.register("junglememorial", () -> new JunglememorialBlock());
	public static final RegistryObject<Block> FORESTMEMORIAL = REGISTRY.register("forestmemorial", () -> new ForestmemorialBlock());
	public static final RegistryObject<Block> SAVANNAMEMORIAL = REGISTRY.register("savannamemorial", () -> new SavannamemorialBlock());
	public static final RegistryObject<Block> TAIGAMEMORIAL = REGISTRY.register("taigamemorial", () -> new TaigamemorialBlock());
	public static final RegistryObject<Block> MEMORYCRYSTALSHELL = REGISTRY.register("memorycrystalshell", () -> new MemorycrystalshellBlock());
	public static final RegistryObject<Block> MEMORYCRYSTAL = REGISTRY.register("memorycrystal", () -> new MemorycrystalBlock());
	public static final RegistryObject<Block> RECALLALTAR = REGISTRY.register("recallaltar", () -> new RecallaltarBlock());
	public static final RegistryObject<Block> COLDBERRYBUSH = REGISTRY.register("coldberrybush", () -> new ColdberrybushBlock());
	public static final RegistryObject<Block> MINICOLDBERRYBUSH = REGISTRY.register("minicoldberrybush", () -> new MinicoldberrybushBlock());
	public static final RegistryObject<Block> SUNBERRYBUSH = REGISTRY.register("sunberrybush", () -> new SunberrybushBlock());
	public static final RegistryObject<Block> MINISUNBERRYBUSH = REGISTRY.register("minisunberrybush", () -> new MinisunberrybushBlock());
	public static final RegistryObject<Block> MINIGOBBERRYBUSH = REGISTRY.register("minigobberrybush", () -> new MinigobberrybushBlock());
	public static final RegistryObject<Block> GOBBERRYBUSH = REGISTRY.register("gobberrybush", () -> new GobberrybushBlock());
	public static final RegistryObject<Block> BILBORRYBUSH = REGISTRY.register("bilborrybush", () -> new BilborrybushBlock());
	public static final RegistryObject<Block> MINIBILBORRYBUSH = REGISTRY.register("minibilborrybush", () -> new MinibilborrybushBlock());
	public static final RegistryObject<Block> BIRTHINGMODULE = REGISTRY.register("birthingmodule", () -> new BirthingmoduleBlock());
	public static final RegistryObject<Block> NETHERSTARCRUST = REGISTRY.register("netherstarcrust", () -> new NetherstarcrustBlock());
	public static final RegistryObject<Block> NETHERUM = REGISTRY.register("netherum", () -> new NetherumBlock());
	public static final RegistryObject<Block> ACTIVENETHERUM = REGISTRY.register("activenetherum", () -> new ActivenetherumBlock());
	public static final RegistryObject<Block> DENSENETHERUM = REGISTRY.register("densenetherum", () -> new DensenetherumBlock());
	public static final RegistryObject<Block> BLAZINGNETHERUM = REGISTRY.register("blazingnetherum", () -> new BlazingnetherumBlock());
	public static final RegistryObject<Block> NETHERUMCARPET = REGISTRY.register("netherumcarpet", () -> new NetherumcarpetBlock());
	public static final RegistryObject<Block> PRISMATICCRYSTALBLOCK = REGISTRY.register("prismaticcrystalblock", () -> new PrismaticcrystalblockBlock());
	public static final RegistryObject<Block> STARRYROOTS = REGISTRY.register("starryroots", () -> new StarryrootsBlock());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK = REGISTRY.register("coloredprismaticcrystalblock", () -> new ColoredprismaticcrystalblockBlock());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_2 = REGISTRY.register("coloredprismaticcrystalblock_2", () -> new Coloredprismaticcrystalblock2Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_3 = REGISTRY.register("coloredprismaticcrystalblock_3", () -> new Coloredprismaticcrystalblock3Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_4 = REGISTRY.register("coloredprismaticcrystalblock_4", () -> new Coloredprismaticcrystalblock4Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_5 = REGISTRY.register("coloredprismaticcrystalblock_5", () -> new Coloredprismaticcrystalblock5Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_6 = REGISTRY.register("coloredprismaticcrystalblock_6", () -> new Coloredprismaticcrystalblock6Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_7 = REGISTRY.register("coloredprismaticcrystalblock_7", () -> new Coloredprismaticcrystalblock7Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_8 = REGISTRY.register("coloredprismaticcrystalblock_8", () -> new Coloredprismaticcrystalblock8Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_9 = REGISTRY.register("coloredprismaticcrystalblock_9", () -> new Coloredprismaticcrystalblock9Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_10 = REGISTRY.register("coloredprismaticcrystalblock_10", () -> new Coloredprismaticcrystalblock10Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_11 = REGISTRY.register("coloredprismaticcrystalblock_11", () -> new Coloredprismaticcrystalblock11Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_12 = REGISTRY.register("coloredprismaticcrystalblock_12", () -> new Coloredprismaticcrystalblock12Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_13 = REGISTRY.register("coloredprismaticcrystalblock_13", () -> new Coloredprismaticcrystalblock13Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_14 = REGISTRY.register("coloredprismaticcrystalblock_14", () -> new Coloredprismaticcrystalblock14Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_15 = REGISTRY.register("coloredprismaticcrystalblock_15", () -> new Coloredprismaticcrystalblock15Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_16 = REGISTRY.register("coloredprismaticcrystalblock_16", () -> new Coloredprismaticcrystalblock16Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_17 = REGISTRY.register("coloredprismaticcrystalblock_17", () -> new Coloredprismaticcrystalblock17Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_18 = REGISTRY.register("coloredprismaticcrystalblock_18", () -> new Coloredprismaticcrystalblock18Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_19 = REGISTRY.register("coloredprismaticcrystalblock_19", () -> new Coloredprismaticcrystalblock19Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_20 = REGISTRY.register("coloredprismaticcrystalblock_20", () -> new Coloredprismaticcrystalblock20Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_21 = REGISTRY.register("coloredprismaticcrystalblock_21", () -> new Coloredprismaticcrystalblock21Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_22 = REGISTRY.register("coloredprismaticcrystalblock_22", () -> new Coloredprismaticcrystalblock22Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_23 = REGISTRY.register("coloredprismaticcrystalblock_23", () -> new Coloredprismaticcrystalblock23Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_24 = REGISTRY.register("coloredprismaticcrystalblock_24", () -> new Coloredprismaticcrystalblock24Block());
	public static final RegistryObject<Block> COLOREDPRISMATICCRYSTALBLOCK_25 = REGISTRY.register("coloredprismaticcrystalblock_25", () -> new Coloredprismaticcrystalblock25Block());
	public static final RegistryObject<Block> NETHERSTARCRUSTPATCH = REGISTRY.register("netherstarcrustpatch", () -> new NetherstarcrustpatchBlock());
	public static final RegistryObject<Block> NETHERLOG = REGISTRY.register("netherlog", () -> new NetherlogBlock());
	public static final RegistryObject<Block> SHAVEDNETHERLOG = REGISTRY.register("shavednetherlog", () -> new ShavednetherlogBlock());
	public static final RegistryObject<Block> NETHERLOG_6 = REGISTRY.register("netherlog_6", () -> new Netherlog6Block());
	public static final RegistryObject<Block> SHAVEDNETHERLOG_6 = REGISTRY.register("shavednetherlog_6", () -> new Shavednetherlog6Block());
	public static final RegistryObject<Block> NETHERPLANKS = REGISTRY.register("netherplanks", () -> new NetherplanksBlock());
	public static final RegistryObject<Block> NETHERLEAVES = REGISTRY.register("netherleaves", () -> new NetherleavesBlock());
	public static final RegistryObject<Block> SCRAPLEAVES = REGISTRY.register("scrapleaves", () -> new ScrapleavesBlock());
	public static final RegistryObject<Block> WHITEPRISMATICCRYSTALBLOCK = REGISTRY.register("whiteprismaticcrystalblock", () -> new WhiteprismaticcrystalblockBlock());
	public static final RegistryObject<Block> DEBRISSCRAPBRICKS = REGISTRY.register("debrisscrapbricks", () -> new DebrisscrapbricksBlock());
	public static final RegistryObject<Block> NETHERDOOR = REGISTRY.register("netherdoor", () -> new NetherdoorBlock());
	public static final RegistryObject<Block> NETHERFENCE = REGISTRY.register("netherfence", () -> new NetherfenceBlock());
	public static final RegistryObject<Block> NETHERGATE = REGISTRY.register("nethergate", () -> new NethergateBlock());
	public static final RegistryObject<Block> NETHERPRESSUREPLATE = REGISTRY.register("netherpressureplate", () -> new NetherpressureplateBlock());
	public static final RegistryObject<Block> NETHERBUTTON = REGISTRY.register("netherbutton", () -> new NetherbuttonBlock());
	public static final RegistryObject<Block> NETHERTRAP = REGISTRY.register("nethertrap", () -> new NethertrapBlock());
	public static final RegistryObject<Block> NETHERSTAIRS = REGISTRY.register("netherstairs", () -> new NetherstairsBlock());
	public static final RegistryObject<Block> NETHERSLAB = REGISTRY.register("netherslab", () -> new NetherslabBlock());
	public static final RegistryObject<Block> MINOSKULLTROPHY = REGISTRY.register("minoskulltrophy", () -> new MinoskulltrophyBlock());
	public static final RegistryObject<Block> BABYNETHERSTARBLOCK = REGISTRY.register("babynetherstarblock", () -> new BabynetherstarblockBlock());
	public static final RegistryObject<Block> SOULFORGE = REGISTRY.register("soulforge", () -> new SoulforgeBlock());
	public static final RegistryObject<Block> NETHERITEORE = REGISTRY.register("netheriteore", () -> new NetheriteoreBlock());
	public static final RegistryObject<Block> DIRECRYPTTILES = REGISTRY.register("direcrypttiles", () -> new DirecrypttilesBlock());
	public static final RegistryObject<Block> DIRECRYPTBRICKS = REGISTRY.register("direcryptbricks", () -> new DirecryptbricksBlock());
	public static final RegistryObject<Block> DIRECRYPTTILES_2 = REGISTRY.register("direcrypttiles_2", () -> new Direcrypttiles2Block());
	public static final RegistryObject<Block> DIRECRYPTBRICKS_2 = REGISTRY.register("direcryptbricks_2", () -> new Direcryptbricks2Block());
	public static final RegistryObject<Block> PROTECTIONRUNE = REGISTRY.register("protectionrune", () -> new ProtectionruneBlock());
	public static final RegistryObject<Block> RECEIVINGPROTECTIONRUNE = REGISTRY.register("receivingprotectionrune", () -> new ReceivingprotectionruneBlock());
	public static final RegistryObject<Block> SHIELDINGPROTECTIONRUNE = REGISTRY.register("shieldingprotectionrune", () -> new ShieldingprotectionruneBlock());
	public static final RegistryObject<Block> HAUNTEDSTATUE = REGISTRY.register("hauntedstatue", () -> new HauntedstatueBlock());
	public static final RegistryObject<Block> SPAWNERCRYSTAL = REGISTRY.register("spawnercrystal", () -> new SpawnercrystalBlock());
	public static final RegistryObject<Block> SPAWNERCRYSTALBROKEN = REGISTRY.register("spawnercrystalbroken", () -> new SpawnercrystalbrokenBlock());
	public static final RegistryObject<Block> DIRECRYPTTILES_SLAB = REGISTRY.register("direcrypttiles_slab", () -> new DirecrypttilesSlabBlock());
	public static final RegistryObject<Block> DIRECRYPTTILES_STAIRS = REGISTRY.register("direcrypttiles_stairs", () -> new DirecrypttilesStairsBlock());
	public static final RegistryObject<Block> DIRECRYPTTILES_WALL = REGISTRY.register("direcrypttiles_wall", () -> new DirecrypttilesWallBlock());
	public static final RegistryObject<Block> DIRECRYPTBRICKS_SLAB = REGISTRY.register("direcryptbricks_slab", () -> new DirecryptbricksSlabBlock());
	public static final RegistryObject<Block> DIRECRYPTBRICKS_STAIRS = REGISTRY.register("direcryptbricks_stairs", () -> new DirecryptbricksStairsBlock());
	public static final RegistryObject<Block> DIRECRYPTBRICKS_WALL = REGISTRY.register("direcryptbricks_wall", () -> new DirecryptbricksWallBlock());
	public static final RegistryObject<Block> DIRECRYPTTILES_2_SLAB = REGISTRY.register("direcrypttiles_2_slab", () -> new Direcrypttiles2SlabBlock());
	public static final RegistryObject<Block> DIRECRYPTTILES_2_STAIRS = REGISTRY.register("direcrypttiles_2_stairs", () -> new Direcrypttiles2StairsBlock());
	public static final RegistryObject<Block> DIRECRYPTTILES_2_WALL = REGISTRY.register("direcrypttiles_2_wall", () -> new Direcrypttiles2WallBlock());
	public static final RegistryObject<Block> DIRECRYPTBRICKS_2_SLAB = REGISTRY.register("direcryptbricks_2_slab", () -> new Direcryptbricks2SlabBlock());
	public static final RegistryObject<Block> DIRECRYPTBRICKS_2_STAIRS = REGISTRY.register("direcryptbricks_2_stairs", () -> new Direcryptbricks2StairsBlock());
	public static final RegistryObject<Block> DIRECRYPTBRICKS_2_WALL = REGISTRY.register("direcryptbricks_2_wall", () -> new Direcryptbricks2WallBlock());
	public static final RegistryObject<Block> PURPLEMUSHROOMBLOCK = REGISTRY.register("purplemushroomblock", () -> new PurplemushroomblockBlock());
	public static final RegistryObject<Block> AURUMBRICKS = REGISTRY.register("aurumbricks", () -> new AurumbricksBlock());
	public static final RegistryObject<Block> AURUMTILES = REGISTRY.register("aurumtiles", () -> new AurumtilesBlock());
	public static final RegistryObject<Block> SHARDEDGLASS = REGISTRY.register("shardedglass", () -> new ShardedglassBlock());
	public static final RegistryObject<Block> SHARDEDGLASSPANE = REGISTRY.register("shardedglasspane", () -> new ShardedglasspaneBlock());
	public static final RegistryObject<Block> AURUMBLOCK = REGISTRY.register("aurumblock", () -> new AurumblockBlock());
	public static final RegistryObject<Block> CRIMSONFORESTMEMORIAL = REGISTRY.register("crimsonforestmemorial", () -> new CrimsonforestmemorialBlock());
	public static final RegistryObject<Block> WARPEDFORESTMEMORIAL = REGISTRY.register("warpedforestmemorial", () -> new WarpedforestmemorialBlock());
	public static final RegistryObject<Block> SOULSANDVALLEYMEMORIAL = REGISTRY.register("soulsandvalleymemorial", () -> new SoulsandvalleymemorialBlock());
	public static final RegistryObject<Block> BASALTDELTAMEMORIAL = REGISTRY.register("basaltdeltamemorial", () -> new BasaltdeltamemorialBlock());
	public static final RegistryObject<Block> NETHERSTARMEMORIAL = REGISTRY.register("netherstarmemorial", () -> new NetherstarmemorialBlock());
	public static final RegistryObject<Block> DRAGONEWTSCALES_BLOCK = REGISTRY.register("dragonewtscales_block", () -> new DragonewtscalesBlockBlock());
	public static final RegistryObject<Block> NETHERSTARCRUSTSHINY = REGISTRY.register("netherstarcrustshiny", () -> new NetherstarcrustshinyBlock());
	public static final RegistryObject<Block> NETHERUMSHINY = REGISTRY.register("netherumshiny", () -> new NetherumshinyBlock());
	public static final RegistryObject<Block> ACTIVENETHERUMSHINY = REGISTRY.register("activenetherumshiny", () -> new ActivenetherumshinyBlock());
	public static final RegistryObject<Block> DENSENETHERUMSHINY = REGISTRY.register("densenetherumshiny", () -> new DensenetherumshinyBlock());
	public static final RegistryObject<Block> BLAZINGNETHERUMSHINY = REGISTRY.register("blazingnetherumshiny", () -> new BlazingnetherumshinyBlock());
	public static final RegistryObject<Block> NETHERUMCARPETSHINY = REGISTRY.register("netherumcarpetshiny", () -> new NetherumcarpetshinyBlock());
	public static final RegistryObject<Block> BABYNETHERSTARSHINY = REGISTRY.register("babynetherstarshiny", () -> new BabynetherstarshinyBlock());
	public static final RegistryObject<Block> NETHERSTARCRUSTPATCHSHINY = REGISTRY.register("netherstarcrustpatchshiny", () -> new NetherstarcrustpatchshinyBlock());
	public static final RegistryObject<Block> SPARKLINGSTARS = REGISTRY.register("sparklingstars", () -> new SparklingstarsBlock());
	public static final RegistryObject<Block> FUMINGSPARKLINGSTARS = REGISTRY.register("fumingsparklingstars", () -> new FumingsparklingstarsBlock());
	public static final RegistryObject<Block> SUNTURFBLOCK = REGISTRY.register("sunturfblock", () -> new SunturfblockBlock());
	public static final RegistryObject<Block> NETHERUMDUST_NEBULATURFBLOCK = REGISTRY.register("netherumdust_nebulaturfblock", () -> new NetherumdustNebulaturfblockBlock());
	public static final RegistryObject<Block> PRISMATICSPROUT = REGISTRY.register("prismaticsprout", () -> new PrismaticsproutBlock());
	public static final RegistryObject<Block> STARFLOWER = REGISTRY.register("starflower", () -> new StarflowerBlock());
	public static final RegistryObject<Block> RADIANTOBSIDIAN = REGISTRY.register("radiantobsidian", () -> new RadiantobsidianBlock());
	public static final RegistryObject<Block> GLEAMINGOBSIDIAN = REGISTRY.register("gleamingobsidian", () -> new GleamingobsidianBlock());
	public static final RegistryObject<Block> OBSIDIANSPROUTS = REGISTRY.register("obsidiansprouts", () -> new ObsidiansproutsBlock());
	public static final RegistryObject<Block> NEBULAOXEYE = REGISTRY.register("nebulaoxeye", () -> new NebulaoxeyeBlock());
	public static final RegistryObject<Block> SOLARLILY = REGISTRY.register("solarlily", () -> new SolarlilyBlock());
	public static final RegistryObject<Block> RUINGRANITETILES = REGISTRY.register("ruingranitetiles", () -> new RuingranitetilesBlock());
	public static final RegistryObject<Block> RUINGRANITEBRICKS = REGISTRY.register("ruingranitebricks", () -> new RuingranitebricksBlock());
	public static final RegistryObject<Block> RUINGRANITETILESSTAIRS = REGISTRY.register("ruingranitetilesstairs", () -> new RuingranitetilesstairsBlock());
	public static final RegistryObject<Block> RUINGRANITETILESSLABS = REGISTRY.register("ruingranitetilesslabs", () -> new RuingranitetilesslabsBlock());
	public static final RegistryObject<Block> RUINGRANITETILESWALLS = REGISTRY.register("ruingranitetileswalls", () -> new RuingranitetileswallsBlock());
	public static final RegistryObject<Block> RUINGRANITEBRICKSSTAIRS = REGISTRY.register("ruingranitebricksstairs", () -> new RuingranitebricksstairsBlock());
	public static final RegistryObject<Block> RUINGRANITEBRICKSSLABS = REGISTRY.register("ruingranitebricksslabs", () -> new RuingranitebricksslabsBlock());
	public static final RegistryObject<Block> RUINGRANITEBRICKSWALLS = REGISTRY.register("ruingranitebrickswalls", () -> new RuingranitebrickswallsBlock());
	public static final RegistryObject<Block> ENERGYDIORITETILE = REGISTRY.register("energydioritetile", () -> new EnergydioritetileBlock());
	public static final RegistryObject<Block> ENERGYDIORITEBRICKS = REGISTRY.register("energydioritebricks", () -> new EnergydioritebricksBlock());
	public static final RegistryObject<Block> ENERGYDIORITETILE_STAIRS = REGISTRY.register("energydioritetile_stairs", () -> new EnergydioritetileStairsBlock());
	public static final RegistryObject<Block> ENERGYDIORITETILE_SLABS = REGISTRY.register("energydioritetile_slabs", () -> new EnergydioritetileSlabsBlock());
	public static final RegistryObject<Block> ENERGYDIORITETILE_WALLS = REGISTRY.register("energydioritetile_walls", () -> new EnergydioritetileWallsBlock());
	public static final RegistryObject<Block> ENERGYDIORITEBRICKS_STAIRS = REGISTRY.register("energydioritebricks_stairs", () -> new EnergydioritebricksStairsBlock());
	public static final RegistryObject<Block> ENERGYDIORITEBRICKS_SLABS = REGISTRY.register("energydioritebricks_slabs", () -> new EnergydioritebricksSlabsBlock());
	public static final RegistryObject<Block> ENERGYDIORITEBRICKS_WALLS = REGISTRY.register("energydioritebricks_walls", () -> new EnergydioritebricksWallsBlock());
	public static final RegistryObject<Block> LIGHTNINGANDESITETILE = REGISTRY.register("lightningandesitetile", () -> new LightningandesitetileBlock());
	public static final RegistryObject<Block> LIGHTNINGANDESITEBRICKS = REGISTRY.register("lightningandesitebricks", () -> new LightningandesitebricksBlock());
	public static final RegistryObject<Block> LIGHTNINGANDESITETILESSTAIRS = REGISTRY.register("lightningandesitetilesstairs", () -> new LightningandesitetilesstairsBlock());
	public static final RegistryObject<Block> LIGHTNINGANDESITETILESSLABS = REGISTRY.register("lightningandesitetilesslabs", () -> new LightningandesitetilesslabsBlock());
	public static final RegistryObject<Block> LIGHTNINGANDESITETILESWALLS = REGISTRY.register("lightningandesitetileswalls", () -> new LightningandesitetileswallsBlock());
	public static final RegistryObject<Block> LIGHTNINGANDESITEBRICKSSTAIRS = REGISTRY.register("lightningandesitebricksstairs", () -> new LightningandesitebricksstairsBlock());
	public static final RegistryObject<Block> LIGHTNINGANDESITEBRICKSSLABS = REGISTRY.register("lightningandesitebricksslabs", () -> new LightningandesitebricksslabsBlock());
	public static final RegistryObject<Block> LIGHTNINGANDESITEBRICKSWALLS = REGISTRY.register("lightningandesitebrickswalls", () -> new LightningandesitebrickswallsBlock());
	public static final RegistryObject<Block> GREENSLIMETURF = REGISTRY.register("greenslimeturf", () -> new GreenslimeturfBlock());
	public static final RegistryObject<Block> BLUESLIMETURF = REGISTRY.register("blueslimeturf", () -> new BlueslimeturfBlock());
	public static final RegistryObject<Block> PINKSLIMETURF = REGISTRY.register("pinkslimeturf", () -> new PinkslimeturfBlock());
	public static final RegistryObject<Block> GREENSLIMESPROUT = REGISTRY.register("greenslimesprout", () -> new GreenslimesproutBlock());
	public static final RegistryObject<Block> BLUESLIMESPROUT = REGISTRY.register("blueslimesprout", () -> new BlueslimesproutBlock());
	public static final RegistryObject<Block> PINKSLIMESPROUT = REGISTRY.register("pinkslimesprout", () -> new PinkslimesproutBlock());
	public static final RegistryObject<Block> GREENSLIMEFOL = REGISTRY.register("greenslimefol", () -> new GreenslimefolBlock());
	public static final RegistryObject<Block> BLUESLIMEFOL = REGISTRY.register("blueslimefol", () -> new BlueslimefolBlock());
	public static final RegistryObject<Block> PINKSLIMEFOL = REGISTRY.register("pinkslimefol", () -> new PinkslimefolBlock());
	public static final RegistryObject<Block> JELLYFLOATTENDRIL = REGISTRY.register("jellyfloattendril", () -> new JellyfloattendrilBlock());
	public static final RegistryObject<Block> JELLYFLOATDARK = REGISTRY.register("jellyfloatdark", () -> new JellyfloatdarkBlock());
	public static final RegistryObject<Block> JELLYFLOATLIGHT = REGISTRY.register("jellyfloatlight", () -> new JellyfloatlightBlock());
	public static final RegistryObject<Block> JELLYFLOAT = REGISTRY.register("jellyfloat", () -> new JellyfloatBlock());
	public static final RegistryObject<Block> JELLYFLOATSLIME = REGISTRY.register("jellyfloatslime", () -> new JellyfloatslimeBlock());
	public static final RegistryObject<Block> PINKJELLYBLOCK = REGISTRY.register("pinkjellyblock", () -> new PinkjellyblockBlock());
	public static final RegistryObject<Block> BLUEJELLYBLOCK = REGISTRY.register("bluejellyblock", () -> new BluejellyblockBlock());
	public static final RegistryObject<Block> GREENJELLYBLOCK = REGISTRY.register("greenjellyblock", () -> new GreenjellyblockBlock());
	public static final RegistryObject<Block> JELLYFLOATLIMB = REGISTRY.register("jellyfloatlimb", () -> new JellyfloatlimbBlock());
	public static final RegistryObject<Block> DRYSEAFOAM = REGISTRY.register("dryseafoam", () -> new DryseafoamBlock());
	public static final RegistryObject<Block> SEAFOAMBUBBLE = REGISTRY.register("seafoambubble", () -> new SeafoambubbleBlock());
	public static final RegistryObject<Block> POOLTILE = REGISTRY.register("pooltile", () -> new PooltileBlock());
	public static final RegistryObject<Block> POOLTILE_STAIRS = REGISTRY.register("pooltile_stairs", () -> new PooltileStairsBlock());
	public static final RegistryObject<Block> POOLTILE_SLABS = REGISTRY.register("pooltile_slabs", () -> new PooltileSlabsBlock());
	public static final RegistryObject<Block> POOLTILE_WALLS = REGISTRY.register("pooltile_walls", () -> new PooltileWallsBlock());
	public static final RegistryObject<Block> POOLTILE_TRAPDOOR = REGISTRY.register("pooltile_trapdoor", () -> new PooltileTrapdoorBlock());
	public static final RegistryObject<Block> POOLTILE_DOOR = REGISTRY.register("pooltile_door", () -> new PooltileDoorBlock());
	public static final RegistryObject<Block> ALTARBRICKS = REGISTRY.register("altarbricks", () -> new AltarbricksBlock());
	public static final RegistryObject<Block> WEAPONALTAR = REGISTRY.register("weaponaltar", () -> new WeaponaltarBlock());
	public static final RegistryObject<Block> ALTARBRICKSTAIRS = REGISTRY.register("altarbrickstairs", () -> new AltarbrickstairsBlock());
	public static final RegistryObject<Block> ALTARBRICKSLABS = REGISTRY.register("altarbrickslabs", () -> new AltarbrickslabsBlock());
	public static final RegistryObject<Block> ALTARBRICKWALLS = REGISTRY.register("altarbrickwalls", () -> new AltarbrickwallsBlock());
	public static final RegistryObject<Block> FLUFFLEAVES = REGISTRY.register("fluffleaves", () -> new FluffleavesBlock());
	public static final RegistryObject<Block> CLOUDSAND = REGISTRY.register("cloudsand", () -> new CloudsandBlock());
	public static final RegistryObject<Block> CLOUDBLOCK = REGISTRY.register("cloudblock", () -> new CloudblockBlock());
	public static final RegistryObject<Block> JELLYPOOLSMEMORIAL = REGISTRY.register("jellypoolsmemorial", () -> new JellypoolsmemorialBlock());
	public static final RegistryObject<Block> FLUFFLOG = REGISTRY.register("flufflog", () -> new FlufflogBlock());
	public static final RegistryObject<Block> STRIPPED_FLUFFLOG = REGISTRY.register("stripped_flufflog", () -> new StrippedFlufflogBlock());
	public static final RegistryObject<Block> FLUFFLOGFULL = REGISTRY.register("flufflogfull", () -> new FlufflogfullBlock());
	public static final RegistryObject<Block> STRIPPED_FLUFFLOGFULL = REGISTRY.register("stripped_flufflogfull", () -> new StrippedFlufflogfullBlock());
	public static final RegistryObject<Block> FLUFFPLANKS = REGISTRY.register("fluffplanks", () -> new FluffplanksBlock());
	public static final RegistryObject<Block> FLUFFSTAIRPLANKS = REGISTRY.register("fluffstairplanks", () -> new FluffstairplanksBlock());
	public static final RegistryObject<Block> FLUFFSLABPLANKS = REGISTRY.register("fluffslabplanks", () -> new FluffslabplanksBlock());
	public static final RegistryObject<Block> FLUFFGATEPLANKS = REGISTRY.register("fluffgateplanks", () -> new FluffgateplanksBlock());
	public static final RegistryObject<Block> FLUFFPLANKFENCE = REGISTRY.register("fluffplankfence", () -> new FluffplankfenceBlock());
	public static final RegistryObject<Block> FLUFFPLANKTRAPDOOR = REGISTRY.register("fluffplanktrapdoor", () -> new FluffplanktrapdoorBlock());
	public static final RegistryObject<Block> FLUFFPLANKDOOR = REGISTRY.register("fluffplankdoor", () -> new FluffplankdoorBlock());
	public static final RegistryObject<Block> FLUFFPLANKBUTTON = REGISTRY.register("fluffplankbutton", () -> new FluffplankbuttonBlock());
	public static final RegistryObject<Block> FLUFFPLANKPRESSUREPLATE = REGISTRY.register("fluffplankpressureplate", () -> new FluffplankpressureplateBlock());
	public static final RegistryObject<Block> CLOUDGEYSERBLOCK = REGISTRY.register("cloudgeyserblock", () -> new CloudgeyserblockBlock());
	public static final RegistryObject<Block> WORTASHLEAVES = REGISTRY.register("wortashleaves", () -> new WortashleavesBlock());
	public static final RegistryObject<Block> WORTASHSAPLING = REGISTRY.register("wortashsapling", () -> new WortashsaplingBlock());
	public static final RegistryObject<Block> FLUFFSAPLING = REGISTRY.register("fluffsapling", () -> new FluffsaplingBlock());
	public static final RegistryObject<Block> WORTASHROOTS = REGISTRY.register("wortashroots", () -> new WortashrootsBlock());
	public static final RegistryObject<Block> BLUETHORNSAPLING = REGISTRY.register("bluethornsapling", () -> new BluethornsaplingBlock());
	public static final RegistryObject<Block> BLUETHORNLEAVES = REGISTRY.register("bluethornleaves", () -> new BluethornleavesBlock());
	public static final RegistryObject<Block> BEACHSTARS = REGISTRY.register("beachstars", () -> new BeachstarsBlock());
	public static final RegistryObject<Block> IVORYBLOCK = REGISTRY.register("ivoryblock", () -> new IvoryblockBlock());
	public static final RegistryObject<Block> IVORYSPAWNER = REGISTRY.register("ivoryspawner", () -> new IvoryspawnerBlock());
	public static final RegistryObject<Block> WINDYSHORESMEMORIAL = REGISTRY.register("windyshoresmemorial", () -> new WindyshoresmemorialBlock());
	public static final RegistryObject<Block> LILYPADBLOCK = REGISTRY.register("lilypadblock", () -> new LilypadblockBlock());
	public static final RegistryObject<Block> LILYPADRIMBLOCK = REGISTRY.register("lilypadrimblock", () -> new LilypadrimblockBlock());
	public static final RegistryObject<Block> DIVERSSTONE = REGISTRY.register("diversstone", () -> new DiversstoneBlock());
	public static final RegistryObject<Block> DEEPDIVERSSTONE = REGISTRY.register("deepdiversstone", () -> new DeepdiversstoneBlock());
	public static final RegistryObject<Block> SKYJADEBLOCK = REGISTRY.register("skyjadeblock", () -> new SkyjadeblockBlock());
	public static final RegistryObject<Block> GREENRIMEVINE = REGISTRY.register("greenrimevine", () -> new GreenrimevineBlock());
	public static final RegistryObject<Block> GREENRIMEBUSH = REGISTRY.register("greenrimebush", () -> new GreenrimebushBlock());
	public static final RegistryObject<Block> GREENRIMEFAN = REGISTRY.register("greenrimefan", () -> new GreenrimefanBlock());
	public static final RegistryObject<Block> CYANRIMEBUSH = REGISTRY.register("cyanrimebush", () -> new CyanrimebushBlock());
	public static final RegistryObject<Block> CYANRIMEVINE = REGISTRY.register("cyanrimevine", () -> new CyanrimevineBlock());
	public static final RegistryObject<Block> CYANRIMEFAN = REGISTRY.register("cyanrimefan", () -> new CyanrimefanBlock());
	public static final RegistryObject<Block> BLUERIMEBUSH = REGISTRY.register("bluerimebush", () -> new BluerimebushBlock());
	public static final RegistryObject<Block> BLUERIMEVINE = REGISTRY.register("bluerimevine", () -> new BluerimevineBlock());
	public static final RegistryObject<Block> BLUERIMEFAN = REGISTRY.register("bluerimefan", () -> new BluerimefanBlock());
	public static final RegistryObject<Block> LIGHTBLUERIMEBUSH = REGISTRY.register("lightbluerimebush", () -> new LightbluerimebushBlock());
	public static final RegistryObject<Block> LIGHTBLUERIMEFAN = REGISTRY.register("lightbluerimefan", () -> new LightbluerimefanBlock());
	public static final RegistryObject<Block> LIGHTBLUERIMEVINE = REGISTRY.register("lightbluerimevine", () -> new LightbluerimevineBlock());
	public static final RegistryObject<Block> PURPLERIMEVINE = REGISTRY.register("purplerimevine", () -> new PurplerimevineBlock());
	public static final RegistryObject<Block> PURPLERIMEFAN = REGISTRY.register("purplerimefan", () -> new PurplerimefanBlock());
	public static final RegistryObject<Block> PURPLERIMEBUSH = REGISTRY.register("purplerimebush", () -> new PurplerimebushBlock());
	public static final RegistryObject<Block> GREENRIMEMOSS = REGISTRY.register("greenrimemoss", () -> new GreenrimemossBlock());
	public static final RegistryObject<Block> CYANRIMEMOSS = REGISTRY.register("cyanrimemoss", () -> new CyanrimemossBlock());
	public static final RegistryObject<Block> BLUERIMEMOSS = REGISTRY.register("bluerimemoss", () -> new BluerimemossBlock());
	public static final RegistryObject<Block> LIGHTBLUERIMEMOSS = REGISTRY.register("lightbluerimemoss", () -> new LightbluerimemossBlock());
	public static final RegistryObject<Block> PURPLERIMEMOSS = REGISTRY.register("purplerimemoss", () -> new PurplerimemossBlock());
	public static final RegistryObject<Block> MAGENTARIMEMOSS = REGISTRY.register("magentarimemoss", () -> new MagentarimemossBlock());
	public static final RegistryObject<Block> MAGENTARIMEVINE = REGISTRY.register("magentarimevine", () -> new MagentarimevineBlock());
	public static final RegistryObject<Block> MAGENTARIMEFAN = REGISTRY.register("magentarimefan", () -> new MagentarimefanBlock());
	public static final RegistryObject<Block> MAGENTARIMEBUSH = REGISTRY.register("magentarimebush", () -> new MagentarimebushBlock());
	public static final RegistryObject<Block> PINKRIMEMOSS = REGISTRY.register("pinkrimemoss", () -> new PinkrimemossBlock());
	public static final RegistryObject<Block> PINKRIMEVINE = REGISTRY.register("pinkrimevine", () -> new PinkrimevineBlock());
	public static final RegistryObject<Block> PINKRIMEFAN = REGISTRY.register("pinkrimefan", () -> new PinkrimefanBlock());
	public static final RegistryObject<Block> PINKRIMEBUSH = REGISTRY.register("pinkrimebush", () -> new PinkrimebushBlock());
	public static final RegistryObject<Block> BROWNRIMEMOSS = REGISTRY.register("brownrimemoss", () -> new BrownrimemossBlock());
	public static final RegistryObject<Block> BROWNRIMEVINE = REGISTRY.register("brownrimevine", () -> new BrownrimevineBlock());
	public static final RegistryObject<Block> BROWNRIMEFAN = REGISTRY.register("brownrimefan", () -> new BrownrimefanBlock());
	public static final RegistryObject<Block> BROWNRIMEBUSH = REGISTRY.register("brownrimebush", () -> new BrownrimebushBlock());
	public static final RegistryObject<Block> LIGHTGRAYRIMEMOSS = REGISTRY.register("lightgrayrimemoss", () -> new LightgrayrimemossBlock());
	public static final RegistryObject<Block> LIGHTGRAYRIMEVINE = REGISTRY.register("lightgrayrimevine", () -> new LightgrayrimevineBlock());
	public static final RegistryObject<Block> LIGHTGRAYRIMEFAN = REGISTRY.register("lightgrayrimefan", () -> new LightgrayrimefanBlock());
	public static final RegistryObject<Block> LIGHTGRAYRIMEBUSH = REGISTRY.register("lightgrayrimebush", () -> new LightgrayrimebushBlock());
	public static final RegistryObject<Block> ORANGERIMEMOSS = REGISTRY.register("orangerimemoss", () -> new OrangerimemossBlock());
	public static final RegistryObject<Block> ORANGERIMEVINE = REGISTRY.register("orangerimevine", () -> new OrangerimevineBlock());
	public static final RegistryObject<Block> ORANGERIMEFAN = REGISTRY.register("orangerimefan", () -> new OrangerimefanBlock());
	public static final RegistryObject<Block> ORANGERIMEBUSH = REGISTRY.register("orangerimebush", () -> new OrangerimebushBlock());
	public static final RegistryObject<Block> BLACKRIMEMOSS = REGISTRY.register("blackrimemoss", () -> new BlackrimemossBlock());
	public static final RegistryObject<Block> BLACKRIMEVINE = REGISTRY.register("blackrimevine", () -> new BlackrimevineBlock());
	public static final RegistryObject<Block> BLACKRIMEFAN = REGISTRY.register("blackrimefan", () -> new BlackrimefanBlock());
	public static final RegistryObject<Block> BLACKRIMEBUSH = REGISTRY.register("blackrimebush", () -> new BlackrimebushBlock());
	public static final RegistryObject<Block> GRAYRIMEMOSS = REGISTRY.register("grayrimemoss", () -> new GrayrimemossBlock());
	public static final RegistryObject<Block> GRAYRIMEVINE = REGISTRY.register("grayrimevine", () -> new GrayrimevineBlock());
	public static final RegistryObject<Block> GRAYRIMEFAN = REGISTRY.register("grayrimefan", () -> new GrayrimefanBlock());
	public static final RegistryObject<Block> GRAYRIMEBUSH = REGISTRY.register("grayrimebush", () -> new GrayrimebushBlock());
	public static final RegistryObject<Block> LIMERIMEMOSS = REGISTRY.register("limerimemoss", () -> new LimerimemossBlock());
	public static final RegistryObject<Block> LIMERIMEVINE = REGISTRY.register("limerimevine", () -> new LimerimevineBlock());
	public static final RegistryObject<Block> LIMERIMEFAN = REGISTRY.register("limerimefan", () -> new LimerimefanBlock());
	public static final RegistryObject<Block> LIMERIMEBUSH = REGISTRY.register("limerimebush", () -> new LimerimebushBlock());
	public static final RegistryObject<Block> YELLOWRIMEMOSS = REGISTRY.register("yellowrimemoss", () -> new YellowrimemossBlock());
	public static final RegistryObject<Block> YELLOWRIMEVINE = REGISTRY.register("yellowrimevine", () -> new YellowrimevineBlock());
	public static final RegistryObject<Block> YELLOWRIMEFAN = REGISTRY.register("yellowrimefan", () -> new YellowrimefanBlock());
	public static final RegistryObject<Block> YELLOWRIMEBUSH = REGISTRY.register("yellowrimebush", () -> new YellowrimebushBlock());
	public static final RegistryObject<Block> REDRIMEMOSS = REGISTRY.register("redrimemoss", () -> new RedrimemossBlock());
	public static final RegistryObject<Block> REDRIMEVINE = REGISTRY.register("redrimevine", () -> new RedrimevineBlock());
	public static final RegistryObject<Block> REDRIMEFAN = REGISTRY.register("redrimefan", () -> new RedrimefanBlock());
	public static final RegistryObject<Block> REDRIMEBUSH = REGISTRY.register("redrimebush", () -> new RedrimebushBlock());
	public static final RegistryObject<Block> WHITERIMEMOSS = REGISTRY.register("whiterimemoss", () -> new WhiterimemossBlock());
	public static final RegistryObject<Block> WHITERIMEVINE = REGISTRY.register("whiterimevine", () -> new WhiterimevineBlock());
	public static final RegistryObject<Block> WHITERIMEFAN = REGISTRY.register("whiterimefan", () -> new WhiterimefanBlock());
	public static final RegistryObject<Block> WHITERIMEBUSH = REGISTRY.register("whiterimebush", () -> new WhiterimebushBlock());
	public static final RegistryObject<Block> DIVINGVINE = REGISTRY.register("divingvine", () -> new DivingvineBlock());
	public static final RegistryObject<Block> DIVINGVINE_BEARING = REGISTRY.register("divingvine_bearing", () -> new DivingvineBearingBlock());
	public static final RegistryObject<Block> TARBLOCK = REGISTRY.register("tarblock", () -> new TarblockBlock());
	public static final RegistryObject<Block> DEEPBRINE = REGISTRY.register("deepbrine", () -> new DeepbrineBlock());
	public static final RegistryObject<Block> GLASSLIGHT = REGISTRY.register("glasslight", () -> new GlasslightBlock());
	public static final RegistryObject<Block> RAREGLASSLIGHT = REGISTRY.register("rareglasslight", () -> new RareglasslightBlock());
	public static final RegistryObject<Block> TAR = REGISTRY.register("tar", () -> new TarBlock());
	public static final RegistryObject<Block> GLASSLIGHTBREWER = REGISTRY.register("glasslightbrewer", () -> new GlasslightbrewerBlock());
	public static final RegistryObject<Block> GLASSLIGHTBURNER = REGISTRY.register("glasslightburner", () -> new GlasslightburnerBlock());
	public static final RegistryObject<Block> RIMESAP = REGISTRY.register("rimesap", () -> new RimesapBlock());
	public static final RegistryObject<Block> CORMUNCULUSBLOCK = REGISTRY.register("cormunculusblock", () -> new CormunculusblockBlock());
	public static final RegistryObject<Block> DARKGEM_CRYSTAL = REGISTRY.register("darkgem_crystal", () -> new DarkgemCrystalBlock());
	public static final RegistryObject<Block> BURNINGTARBLOCK = REGISTRY.register("burningtarblock", () -> new BurningtarblockBlock());
	public static final RegistryObject<Block> BURNINGDARKSTONE = REGISTRY.register("burningdarkstone", () -> new BurningdarkstoneBlock());
	public static final RegistryObject<Block> DIVERSALLOY_BLOCK = REGISTRY.register("diversalloy_block", () -> new DiversalloyBlockBlock());
	public static final RegistryObject<Block> DARKGEMBLOCK = REGISTRY.register("darkgemblock", () -> new DarkgemblockBlock());
	public static final RegistryObject<Block> DIVERSCROWN_MEMORIAL = REGISTRY.register("diverscrown_memorial", () -> new DiverscrownMemorialBlock());
	public static final RegistryObject<Block> MYCENASPORECLOUD_BLOCK = REGISTRY.register("mycenasporecloud_block", () -> new MycenasporecloudBlockBlock());
	public static final RegistryObject<Block> SHIELDINGPROTECTIONRUNE_SMALL = REGISTRY.register("shieldingprotectionrune_small", () -> new ShieldingprotectionruneSmallBlock());
	public static final RegistryObject<Block> LILYPADPLANKS = REGISTRY.register("lilypadplanks", () -> new LilypadplanksBlock());
	public static final RegistryObject<Block> STRIPPEDLILYPADLOG = REGISTRY.register("strippedlilypadlog", () -> new StrippedlilypadlogBlock());
	public static final RegistryObject<Block> LILYPADLOG = REGISTRY.register("lilypadlog", () -> new LilypadlogBlock());
	public static final RegistryObject<Block> LILYPADSAPLING = REGISTRY.register("lilypadsapling", () -> new LilypadsaplingBlock());
	public static final RegistryObject<Block> LILYPADPLANK_STAIRS = REGISTRY.register("lilypadplank_stairs", () -> new LilypadplankStairsBlock());
	public static final RegistryObject<Block> LILYPADPLANKSLABS = REGISTRY.register("lilypadplankslabs", () -> new LilypadplankslabsBlock());
	public static final RegistryObject<Block> STRIPPEDLILYPADLOG_FULL = REGISTRY.register("strippedlilypadlog_full", () -> new StrippedlilypadlogFullBlock());
	public static final RegistryObject<Block> LILYPADLOG_FULL = REGISTRY.register("lilypadlog_full", () -> new LilypadlogFullBlock());
	public static final RegistryObject<Block> LILYPADPLANKS_GATE = REGISTRY.register("lilypadplanks_gate", () -> new LilypadplanksGateBlock());
	public static final RegistryObject<Block> LILYPADPLANKS_FENCE = REGISTRY.register("lilypadplanks_fence", () -> new LilypadplanksFenceBlock());
	public static final RegistryObject<Block> LILYPADPLANKS_BUTTON = REGISTRY.register("lilypadplanks_button", () -> new LilypadplanksButtonBlock());
	public static final RegistryObject<Block> LILYPADPLANKS_PRESSUREPLATE = REGISTRY.register("lilypadplanks_pressureplate", () -> new LilypadplanksPressureplateBlock());
	public static final RegistryObject<Block> LILYPADPLANKS_DOOR = REGISTRY.register("lilypadplanks_door", () -> new LilypadplanksDoorBlock());
	public static final RegistryObject<Block> LILYPADPLANKS_TRAPDOOR = REGISTRY.register("lilypadplanks_trapdoor", () -> new LilypadplanksTrapdoorBlock());
	public static final RegistryObject<Block> SPIDERNEST_COBBLESTONE = REGISTRY.register("spidernest_cobblestone", () -> new SpidernestCobblestoneBlock());
	public static final RegistryObject<Block> EMPTYNEST_COBBLESTONE = REGISTRY.register("emptynest_cobblestone", () -> new EmptynestCobblestoneBlock());
	public static final RegistryObject<Block> SPIDERBORE_COBBLESTONE = REGISTRY.register("spiderbore_cobblestone", () -> new SpiderboreCobblestoneBlock());
	public static final RegistryObject<Block> SPIDERBORE_DEEPSLATEBRICKS = REGISTRY.register("spiderbore_deepslatebricks", () -> new SpiderboreDeepslatebricksBlock());
	public static final RegistryObject<Block> WALLWEB = REGISTRY.register("wallweb", () -> new WallwebBlock());
	public static final RegistryObject<Block> PUMPKINCORE = REGISTRY.register("pumpkincore", () -> new PumpkincoreBlock());
	public static final RegistryObject<Block> DUNGEONLANTERN = REGISTRY.register("dungeonlantern", () -> new DungeonlanternBlock());
	public static final RegistryObject<Block> DUNGEONHATCH_LOCKED = REGISTRY.register("dungeonhatch_locked", () -> new DungeonhatchLockedBlock());
	public static final RegistryObject<Block> DUNGEONHATCH = REGISTRY.register("dungeonhatch", () -> new DungeonhatchBlock());
	public static final RegistryObject<Block> CLOUD_SANDSTONE = REGISTRY.register("cloud_sandstone", () -> new CloudSandstoneBlock());
	public static final RegistryObject<Block> SMOOTH_CLOUD_SANDSTONE = REGISTRY.register("smooth_cloud_sandstone", () -> new SmoothCloudSandstoneBlock());
	public static final RegistryObject<Block> CUT_CLOUD_SANDSTONE = REGISTRY.register("cut_cloud_sandstone", () -> new CutCloudSandstoneBlock());
	public static final RegistryObject<Block> CHISELED_CLOUD_SANDSTONE = REGISTRY.register("chiseled_cloud_sandstone", () -> new ChiseledCloudSandstoneBlock());
	public static final RegistryObject<Block> CLOUD_SANDSTONE_SLABS = REGISTRY.register("cloud_sandstone_slabs", () -> new CloudSandstoneSlabsBlock());
	public static final RegistryObject<Block> CLOUD_SANDSTONE_STAIR = REGISTRY.register("cloud_sandstone_stair", () -> new CloudSandstoneStairBlock());
	public static final RegistryObject<Block> CLOUD_SANDSTONE_WALLS = REGISTRY.register("cloud_sandstone_walls", () -> new CloudSandstoneWallsBlock());
	public static final RegistryObject<Block> SMOOTH_CLOUD_SANDSTONE_SLAB = REGISTRY.register("smooth_cloud_sandstone_slab", () -> new SmoothCloudSandstoneSlabBlock());
	public static final RegistryObject<Block> SMOOTH_CLOUD_SANDSTONE_STAIRS = REGISTRY.register("smooth_cloud_sandstone_stairs", () -> new SmoothCloudSandstoneStairsBlock());
	public static final RegistryObject<Block> SMOOTH_CLOUD_SANDSTONE_WALL = REGISTRY.register("smooth_cloud_sandstone_wall", () -> new SmoothCloudSandstoneWallBlock());
	public static final RegistryObject<Block> CUT_CLOUD_SANDSTONE_SLAB = REGISTRY.register("cut_cloud_sandstone_slab", () -> new CutCloudSandstoneSlabBlock());
	public static final RegistryObject<Block> CUT_CLOUD_SANDSTONE_STAIRS = REGISTRY.register("cut_cloud_sandstone_stairs", () -> new CutCloudSandstoneStairsBlock());
	public static final RegistryObject<Block> CUT_CLOUD_SANDSTONE_WALL = REGISTRY.register("cut_cloud_sandstone_wall", () -> new CutCloudSandstoneWallBlock());
	public static final RegistryObject<Block> VAMITEORE = REGISTRY.register("vamiteore", () -> new VamiteoreBlock());
	public static final RegistryObject<Block> NOOBIUMORE = REGISTRY.register("noobiumore", () -> new NoobiumoreBlock());
	public static final RegistryObject<Block> NEONBLOCK = REGISTRY.register("neonblock", () -> new NeonblockBlock());
	public static final RegistryObject<Block> FLUTANITEORE = REGISTRY.register("flutaniteore", () -> new FlutaniteoreBlock());
	public static final RegistryObject<Block> LIGHTNINGANDESITEORE = REGISTRY.register("lightningandesiteore", () -> new LightningandesiteoreBlock());
	public static final RegistryObject<Block> FERZIUMORE = REGISTRY.register("ferziumore", () -> new FerziumoreBlock());
	public static final RegistryObject<Block> MERTHIUMORE = REGISTRY.register("merthiumore", () -> new MerthiumoreBlock());
	public static final RegistryObject<Block> DUSTFLUXORE = REGISTRY.register("dustfluxore", () -> new DustfluxoreBlock());
	public static final RegistryObject<Block> SHIMMERINGORE = REGISTRY.register("shimmeringore", () -> new ShimmeringoreBlock());
	public static final RegistryObject<Block> DEEPFLUTANITEORE = REGISTRY.register("deepflutaniteore", () -> new DeepflutaniteoreBlock());
	public static final RegistryObject<Block> DEEPVAMITEORE = REGISTRY.register("deepvamiteore", () -> new DeepvamiteoreBlock());
	public static final RegistryObject<Block> DEEPFERZIUMORE = REGISTRY.register("deepferziumore", () -> new DeepferziumoreBlock());
	public static final RegistryObject<Block> DEEPMERTHIUMORE = REGISTRY.register("deepmerthiumore", () -> new DeepmerthiumoreBlock());
	public static final RegistryObject<Block> DEEPNOOBIUMORE = REGISTRY.register("deepnoobiumore", () -> new DeepnoobiumoreBlock());
	public static final RegistryObject<Block> DEEPSHIMMERINGORE = REGISTRY.register("deepshimmeringore", () -> new DeepshimmeringoreBlock());
	public static final RegistryObject<Block> NETHERSAPLING = REGISTRY.register("nethersapling", () -> new NethersaplingBlock());
	public static final RegistryObject<Block> SCRAPSAPLING = REGISTRY.register("scrapsapling", () -> new ScrapsaplingBlock());
	public static final RegistryObject<Block> DEBRISSCRAPS = REGISTRY.register("debrisscraps", () -> new DebrisscrapsBlock());
	public static final RegistryObject<Block> CRABPOT = REGISTRY.register("crabpot", () -> new CrabpotBlock());
	public static final RegistryObject<Block> NANOSHRIMPPOT = REGISTRY.register("nanoshrimppot", () -> new NanoshrimppotBlock());
	public static final RegistryObject<Block> SMALL_SCRAPPER = REGISTRY.register("small_scrapper", () -> new SmallScrapperBlock());
	public static final RegistryObject<Block> POOLTILE_SUMMONER = REGISTRY.register("pooltile_summoner", () -> new PooltileSummonerBlock());
	public static final RegistryObject<Block> SIRENHEART = REGISTRY.register("sirenheart", () -> new SirenheartBlock());
	public static final RegistryObject<Block> TAR_DARKSTONE = REGISTRY.register("tar_darkstone", () -> new TarDarkstoneBlock());
	public static final RegistryObject<Block> WILDBLUEBERRY = REGISTRY.register("wildblueberry", () -> new WildblueberryBlock());
	public static final RegistryObject<Block> WILDPERRYBERRY = REGISTRY.register("wildperryberry", () -> new WildperryberryBlock());
	public static final RegistryObject<Block> WILDBEESTINGBERRYBUSH = REGISTRY.register("wildbeestingberrybush", () -> new WildbeestingberrybushBlock());
	public static final RegistryObject<Block> WILDSTRAWBERRYBUSH = REGISTRY.register("wildstrawberrybush", () -> new WildstrawberrybushBlock());
	public static final RegistryObject<Block> WILDCOLDBERRYBUSH = REGISTRY.register("wildcoldberrybush", () -> new WildcoldberrybushBlock());
	public static final RegistryObject<Block> WILDSUNBERRYBUSH = REGISTRY.register("wildsunberrybush", () -> new WildsunberrybushBlock());
	public static final RegistryObject<Block> WILDGOBBERRYBUSH = REGISTRY.register("wildgobberrybush", () -> new WildgobberrybushBlock());
	public static final RegistryObject<Block> WILDBILBORRYBUSH = REGISTRY.register("wildbilborrybush", () -> new WildbilborrybushBlock());
	public static final RegistryObject<Block> PURPLEMUSHROOMS = REGISTRY.register("purplemushrooms", () -> new PurplemushroomsBlock());
	public static final RegistryObject<Block> DARKWATER = REGISTRY.register("darkwater", () -> new DarkwaterBlock());
	public static final RegistryObject<Block> REGENSUBSTANCE = REGISTRY.register("regensubstance", () -> new RegensubstanceBlock());
	public static final RegistryObject<Block> CORRUPTDEW = REGISTRY.register("corruptdew", () -> new CorruptdewBlock());
	public static final RegistryObject<Block> NETHERUMFLUID = REGISTRY.register("netherumfluid", () -> new NetherumfluidBlock());
	public static final RegistryObject<Block> DUNGEONWATER = REGISTRY.register("dungeonwater", () -> new DungeonwaterBlock());
	public static final RegistryObject<Block> SILVERSHORESLIQUID = REGISTRY.register("silvershoresliquid", () -> new SilvershoresliquidBlock());
	public static final RegistryObject<Block> NIGHTMARE_SHAMAN = REGISTRY.register("nightmare_shaman", () -> new NightmareShamanBlock());
	public static final RegistryObject<Block> BLUEDOOR = REGISTRY.register("bluedoor", () -> new BluedoorBlock());
	public static final RegistryObject<Block> OLDLOG = REGISTRY.register("oldlog", () -> new OldlogBlock());
	public static final RegistryObject<Block> OLDPLANK = REGISTRY.register("oldplank", () -> new OldplankBlock());
	public static final RegistryObject<Block> OLDPLANKSLAB = REGISTRY.register("oldplankslab", () -> new OldplankslabBlock());
	public static final RegistryObject<Block> OLDPLANKSTAIRS = REGISTRY.register("oldplankstairs", () -> new OldplankstairsBlock());
	public static final RegistryObject<Block> OLDBRICKS = REGISTRY.register("oldbricks", () -> new OldbricksBlock());
	public static final RegistryObject<Block> OLDFURNACE = REGISTRY.register("oldfurnace", () -> new OldfurnaceBlock());
	public static final RegistryObject<Block> OLDCRAFTINGTABLE = REGISTRY.register("oldcraftingtable", () -> new OldcraftingtableBlock());
	public static final RegistryObject<Block> OLDDOOR = REGISTRY.register("olddoor", () -> new OlddoorBlock());
	public static final RegistryObject<Block> OLDBRICKWALLS = REGISTRY.register("oldbrickwalls", () -> new OldbrickwallsBlock());
	public static final RegistryObject<Block> OLDBRICKSTAIRS = REGISTRY.register("oldbrickstairs", () -> new OldbrickstairsBlock());
	public static final RegistryObject<Block> OLDBRICKSLABS = REGISTRY.register("oldbrickslabs", () -> new OldbrickslabsBlock());
	public static final RegistryObject<Block> OLDBED = REGISTRY.register("oldbed", () -> new OldbedBlock());
	public static final RegistryObject<Block> OLDLEAVES = REGISTRY.register("oldleaves", () -> new OldleavesBlock());
	public static final RegistryObject<Block> RANDOMTELEPORT_BLOCK = REGISTRY.register("randomteleport_block", () -> new RandomteleportBlockBlock());
	public static final RegistryObject<Block> SILVERSHORESSAND = REGISTRY.register("silvershoressand", () -> new SilvershoressandBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_BLUE_WALL = REGISTRY.register("boardingschool_blue_wall", () -> new BoardingschoolBlueWallBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_BLUEWALL_STAIRS = REGISTRY.register("boardingschool_bluewall_stairs", () -> new BoardingschoolBluewallStairsBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_BLUEWALL_SLABS = REGISTRY.register("boardingschool_bluewall_slabs", () -> new BoardingschoolBluewallSlabsBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_YELLOW_WALL = REGISTRY.register("boardingschool_yellow_wall", () -> new BoardingschoolYellowWallBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_YELLOW_WALL_STAIRS = REGISTRY.register("boardingschool_yellow_wall_stairs", () -> new BoardingschoolYellowWallStairsBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_YELLOW_WALL_SLABS = REGISTRY.register("boardingschool_yellow_wall_slabs", () -> new BoardingschoolYellowWallSlabsBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_PINK_WALL = REGISTRY.register("boardingschool_pink_wall", () -> new BoardingschoolPinkWallBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_PINK_WALL_STAIRS = REGISTRY.register("boardingschool_pink_wall_stairs", () -> new BoardingschoolPinkWallStairsBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_PINK_WALL_SLABS = REGISTRY.register("boardingschool_pink_wall_slabs", () -> new BoardingschoolPinkWallSlabsBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_WHITE_WALL = REGISTRY.register("boardingschool_white_wall", () -> new BoardingschoolWhiteWallBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_WHITE_WALL_STAIRS = REGISTRY.register("boardingschool_white_wall_stairs", () -> new BoardingschoolWhiteWallStairsBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_WHITE_WALL_SLABS = REGISTRY.register("boardingschool_white_wall_slabs", () -> new BoardingschoolWhiteWallSlabsBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_DIRT = REGISTRY.register("boardingschool_dirt", () -> new BoardingschoolDirtBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_DIRT_STAIRS = REGISTRY.register("boardingschool_dirt_stairs", () -> new BoardingschoolDirtStairsBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_DIRT_SLABS = REGISTRY.register("boardingschool_dirt_slabs", () -> new BoardingschoolDirtSlabsBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_ROOF_1 = REGISTRY.register("boardingschool_roof_1", () -> new BoardingschoolRoof1Block());
	public static final RegistryObject<Block> BOARDINGSCHOOL_ROOF_1_STAIRS = REGISTRY.register("boardingschool_roof_1_stairs", () -> new BoardingschoolRoof1StairsBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_ROOF_1_SLABS = REGISTRY.register("boardingschool_roof_1_slabs", () -> new BoardingschoolRoof1SlabsBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_GRAYCONCRETE = REGISTRY.register("boardingschool_grayconcrete", () -> new BoardingschoolGrayconcreteBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_GRAY_CONCRETE_STAIRS = REGISTRY.register("boardingschool_gray_concrete_stairs", () -> new BoardingschoolGrayConcreteStairsBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_GRAY_CONCRETE_SLABS = REGISTRY.register("boardingschool_gray_concrete_slabs", () -> new BoardingschoolGrayConcreteSlabsBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_PLANKS = REGISTRY.register("boardingschool_planks", () -> new BoardingschoolPlanksBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_PLANKS_STAIRS = REGISTRY.register("boardingschool_planks_stairs", () -> new BoardingschoolPlanksStairsBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_PLANKS_SLABS = REGISTRY.register("boardingschool_planks_slabs", () -> new BoardingschoolPlanksSlabsBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_RUST_BLOCKS = REGISTRY.register("boardingschool_rust_blocks", () -> new BoardingschoolRustBlocksBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_RUST_BLOCK_STAIRS = REGISTRY.register("boardingschool_rust_block_stairs", () -> new BoardingschoolRustBlockStairsBlock());
	public static final RegistryObject<Block> CORRUPTFLOWEREASTEREGG = REGISTRY.register("corruptflowereasteregg", () -> new CorruptflowereastereggBlock());
	public static final RegistryObject<Block> ABYSSALFIRE = REGISTRY.register("abyssalfire", () -> new AbyssalfireBlock());
	public static final RegistryObject<Block> FIRELIQUID = REGISTRY.register("fireliquid", () -> new FireliquidBlock());
	public static final RegistryObject<Block> EARTHELEMENTLIQUID = REGISTRY.register("earthelementliquid", () -> new EarthelementliquidBlock());
	public static final RegistryObject<Block> AIRELEMENTLIQUID = REGISTRY.register("airelementliquid", () -> new AirelementliquidBlock());
	public static final RegistryObject<Block> WATERELEMENTLIQUID = REGISTRY.register("waterelementliquid", () -> new WaterelementliquidBlock());
	public static final RegistryObject<Block> LIGHTNINGELEMENTLIQUID = REGISTRY.register("lightningelementliquid", () -> new LightningelementliquidBlock());
	public static final RegistryObject<Block> THEBEGINNINGOFEVERYTHING = REGISTRY.register("thebeginningofeverything", () -> new ThebeginningofeverythingBlock());
	public static final RegistryObject<Block> ABYSSPORTALBLOCK = REGISTRY.register("abyssportalblock", () -> new AbyssportalblockBlock());
	public static final RegistryObject<Block> THEABYSS_PORTAL = REGISTRY.register("theabyss_portal", () -> new TheabyssPortalBlock());
	public static final RegistryObject<Block> SPRINGWATER = REGISTRY.register("springwater", () -> new SpringwaterBlock());
	public static final RegistryObject<Block> SPRINGWATERALPHAN = REGISTRY.register("springwateralphan", () -> new SpringwateralphanBlock());
	public static final RegistryObject<Block> CHECKINGBLOCKALPHAN = REGISTRY.register("checkingblockalphan", () -> new CheckingblockalphanBlock());
	public static final RegistryObject<Block> BLACKBARRIERCLOSING = REGISTRY.register("blackbarrierclosing", () -> new BlackbarrierclosingBlock());
	public static final RegistryObject<Block> BLUEBARRIERCLOSING = REGISTRY.register("bluebarrierclosing", () -> new BluebarrierclosingBlock());
	public static final RegistryObject<Block> BROWNBARRIERCLOSING = REGISTRY.register("brownbarrierclosing", () -> new BrownbarrierclosingBlock());
	public static final RegistryObject<Block> CYANBARRIERCLOSING = REGISTRY.register("cyanbarrierclosing", () -> new CyanbarrierclosingBlock());
	public static final RegistryObject<Block> GRAYBARRIERCLOSING = REGISTRY.register("graybarrierclosing", () -> new GraybarrierclosingBlock());
	public static final RegistryObject<Block> GREENBARRIERCLOSING = REGISTRY.register("greenbarrierclosing", () -> new GreenbarrierclosingBlock());
	public static final RegistryObject<Block> LIGHTBLUEBARRIERCLOSING = REGISTRY.register("lightbluebarrierclosing", () -> new LightbluebarrierclosingBlock());
	public static final RegistryObject<Block> LIGHTGRAYBARRIERCLOSING = REGISTRY.register("lightgraybarrierclosing", () -> new LightgraybarrierclosingBlock());
	public static final RegistryObject<Block> LIMEBARRIERCLOSING = REGISTRY.register("limebarrierclosing", () -> new LimebarrierclosingBlock());
	public static final RegistryObject<Block> MAGENTABARRIERCLOSING = REGISTRY.register("magentabarrierclosing", () -> new MagentabarrierclosingBlock());
	public static final RegistryObject<Block> ORANGEBARRIERCLOSING = REGISTRY.register("orangebarrierclosing", () -> new OrangebarrierclosingBlock());
	public static final RegistryObject<Block> PINKBARRIERCLOSING = REGISTRY.register("pinkbarrierclosing", () -> new PinkbarrierclosingBlock());
	public static final RegistryObject<Block> PURPLEBARRIERCLOSING = REGISTRY.register("purplebarrierclosing", () -> new PurplebarrierclosingBlock());
	public static final RegistryObject<Block> REDBARRIERCLOSING = REGISTRY.register("redbarrierclosing", () -> new RedbarrierclosingBlock());
	public static final RegistryObject<Block> WHITEBARRIERCLOSING = REGISTRY.register("whitebarrierclosing", () -> new WhitebarrierclosingBlock());
	public static final RegistryObject<Block> YELLOWBARRIERCLOSING = REGISTRY.register("yellowbarrierclosing", () -> new YellowbarrierclosingBlock());
	public static final RegistryObject<Block> DARKBUMREDAPPLE = REGISTRY.register("darkbumredapple", () -> new DarkbumredappleBlock());
	public static final RegistryObject<Block> DARKBUMGOLDENAPPLE = REGISTRY.register("darkbumgoldenapple", () -> new DarkbumgoldenappleBlock());
	public static final RegistryObject<Block> DARKBUMGIVE = REGISTRY.register("darkbumgive", () -> new DarkbumgiveBlock());
	public static final RegistryObject<Block> MYCENA_BIOME_ALPHAN = REGISTRY.register("mycena_biome_alphan", () -> new MycenaBiomeAlphanBlock());
	public static final RegistryObject<Block> MYCENA_BIOME_OMEGAN = REGISTRY.register("mycena_biome_omegan", () -> new MycenaBiomeOmeganBlock());
	public static final RegistryObject<Block> RAGDOLLALPHAN = REGISTRY.register("ragdollalphan", () -> new RagdollalphanBlock());
	public static final RegistryObject<Block> FROSTYICEALPHAN = REGISTRY.register("frostyicealphan", () -> new FrostyicealphanBlock());
	public static final RegistryObject<Block> CRACKINGICE_5 = REGISTRY.register("crackingice_5", () -> new Crackingice5Block());
	public static final RegistryObject<Block> CRACKINGICE_4 = REGISTRY.register("crackingice_4", () -> new Crackingice4Block());
	public static final RegistryObject<Block> CRACKINGICE_3 = REGISTRY.register("crackingice_3", () -> new Crackingice3Block());
	public static final RegistryObject<Block> CRACKINGICE_2 = REGISTRY.register("crackingice_2", () -> new Crackingice2Block());
	public static final RegistryObject<Block> THEPITLANDS_PORTAL = REGISTRY.register("thepitlands_portal", () -> new ThepitlandsPortalBlock());
	public static final RegistryObject<Block> PERVADEDBEDROCK = REGISTRY.register("pervadedbedrock", () -> new PervadedbedrockBlock());
	public static final RegistryObject<Block> EMPTIEDBEDROCK = REGISTRY.register("emptiedbedrock", () -> new EmptiedbedrockBlock());
	public static final RegistryObject<Block> NETHERSTAR_BIOME_ALPHAN = REGISTRY.register("netherstar_biome_alphan", () -> new NetherstarBiomeAlphanBlock());
	public static final RegistryObject<Block> NETHERSTAR_BIOME_OMEGAN = REGISTRY.register("netherstar_biome_omegan", () -> new NetherstarBiomeOmeganBlock());
	public static final RegistryObject<Block> ANIMOCHROMATICPRISMATICCRYSTALBLOCK = REGISTRY.register("animochromaticprismaticcrystalblock", () -> new AnimochromaticprismaticcrystalblockBlock());
	public static final RegistryObject<Block> NETHERSTAR_PRISMATICSPAWNER = REGISTRY.register("netherstar_prismaticspawner", () -> new NetherstarPrismaticspawnerBlock());
	public static final RegistryObject<Block> NETHERSTAR_PRISMATICWALL = REGISTRY.register("netherstar_prismaticwall", () -> new NetherstarPrismaticwallBlock());
	public static final RegistryObject<Block> PROTECTIONREMOVER = REGISTRY.register("protectionremover", () -> new ProtectionremoverBlock());
	public static final RegistryObject<Block> PROTECTIONZONEREMOVER = REGISTRY.register("protectionzoneremover", () -> new ProtectionzoneremoverBlock());
	public static final RegistryObject<Block> DIRECRYPTBRICKS_SECRET = REGISTRY.register("direcryptbricks_secret", () -> new DirecryptbricksSecretBlock());
	public static final RegistryObject<Block> DIRECRYPTBRICKS_2_SECRET = REGISTRY.register("direcryptbricks_2_secret", () -> new Direcryptbricks2SecretBlock());
	public static final RegistryObject<Block> JELLYFLOAT_OMEGAN = REGISTRY.register("jellyfloat_omegan", () -> new JellyfloatOmeganBlock());
	public static final RegistryObject<Block> SILVERORE = REGISTRY.register("silverore", () -> new SilveroreBlock());
	public static final RegistryObject<Block> FISHALTAR = REGISTRY.register("fishaltar", () -> new FishaltarBlock());
	public static final RegistryObject<Block> NETHERFRUITPLANT_1 = REGISTRY.register("netherfruitplant_1", () -> new Netherfruitplant1Block());
	public static final RegistryObject<Block> NETHERFRUITPLANT_2 = REGISTRY.register("netherfruitplant_2", () -> new Netherfruitplant2Block());
	public static final RegistryObject<Block> NETHERFRUITPLANT_3 = REGISTRY.register("netherfruitplant_3", () -> new Netherfruitplant3Block());
	public static final RegistryObject<Block> NETHERFRUITPLANT_4 = REGISTRY.register("netherfruitplant_4", () -> new Netherfruitplant4Block());
	public static final RegistryObject<Block> BLUEDOOR_PORTAL = REGISTRY.register("bluedoor_portal", () -> new BluedoorPortalBlock());
	public static final RegistryObject<Block> MEMORYPLANT_1 = REGISTRY.register("memoryplant_1", () -> new Memoryplant1Block());
	public static final RegistryObject<Block> MEMORYPLANT_2 = REGISTRY.register("memoryplant_2", () -> new Memoryplant2Block());
	public static final RegistryObject<Block> MEMORYPLANT_3 = REGISTRY.register("memoryplant_3", () -> new Memoryplant3Block());
	public static final RegistryObject<Block> RAREMEMORYPLANT_1 = REGISTRY.register("rarememoryplant_1", () -> new Rarememoryplant1Block());
	public static final RegistryObject<Block> COREMEMORYPLANT_1 = REGISTRY.register("corememoryplant_1", () -> new Corememoryplant1Block());
	public static final RegistryObject<Block> RAREMEMORYPLANT_2 = REGISTRY.register("rarememoryplant_2", () -> new Rarememoryplant2Block());
	public static final RegistryObject<Block> RAREMEMORYPLANT_3 = REGISTRY.register("rarememoryplant_3", () -> new Rarememoryplant3Block());
	public static final RegistryObject<Block> COREMEMORYPLANT_2 = REGISTRY.register("corememoryplant_2", () -> new Corememoryplant2Block());
	public static final RegistryObject<Block> COREMEMORYPLANT_3 = REGISTRY.register("corememoryplant_3", () -> new Corememoryplant3Block());
	public static final RegistryObject<Block> FORGOTTEN_OMEGAN = REGISTRY.register("forgotten_omegan", () -> new ForgottenOmeganBlock());
	public static final RegistryObject<Block> DEEPSLATEBRICK_POT = REGISTRY.register("deepslatebrick_pot", () -> new DeepslatebrickPotBlock());
	public static final RegistryObject<Block> JELLYFLOAT_ALPHAN = REGISTRY.register("jellyfloat_alphan", () -> new JellyfloatAlphanBlock());
	public static final RegistryObject<Block> WINDYSHORES_OMEGAN = REGISTRY.register("windyshores_omegan", () -> new WindyshoresOmeganBlock());
	public static final RegistryObject<Block> DIVERSCROWN_OMEGAN = REGISTRY.register("diverscrown_omegan", () -> new DiverscrownOmeganBlock());
	public static final RegistryObject<Block> DARKGEM_CRYSTAL_BEAM = REGISTRY.register("darkgem_crystal_beam", () -> new DarkgemCrystalBeamBlock());
	public static final RegistryObject<Block> CRYSTALPALACESKY = REGISTRY.register("crystalpalacesky", () -> new CrystalpalaceskyBlock());
	public static final RegistryObject<Block> TRIGGEREDSIRENHEART = REGISTRY.register("triggeredsirenheart", () -> new TriggeredsirenheartBlock());
	public static final RegistryObject<Block> MYCENABRICK_POT = REGISTRY.register("mycenabrick_pot", () -> new MycenabrickPotBlock());
	public static final RegistryObject<Block> INVISIBLEOMEGAN = REGISTRY.register("invisibleomegan", () -> new InvisibleomeganBlock());
	public static final RegistryObject<Block> CURSEDMEMORYPLANT_1 = REGISTRY.register("cursedmemoryplant_1", () -> new Cursedmemoryplant1Block());
	public static final RegistryObject<Block> CURSEDMEMORYPLANT_2 = REGISTRY.register("cursedmemoryplant_2", () -> new Cursedmemoryplant2Block());
	public static final RegistryObject<Block> CURSEDMEMORYPLANT_3 = REGISTRY.register("cursedmemoryplant_3", () -> new Cursedmemoryplant3Block());
	public static final RegistryObject<Block> BOARDINGSCHOOL_RUST_BLOCK_SLABS = REGISTRY.register("boardingschool_rust_block_slabs", () -> new BoardingschoolRustBlockSlabsBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_WHITEBRICK_BLOCKS = REGISTRY.register("boardingschool_whitebrick_blocks", () -> new BoardingschoolWhitebrickBlocksBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_WHITE_BRICK_STAIRS = REGISTRY.register("boardingschool_white_brick_stairs", () -> new BoardingschoolWhiteBrickStairsBlock());
	public static final RegistryObject<Block> BOARDINGSCHOOL_WHITE_BRICK_SLABS = REGISTRY.register("boardingschool_white_brick_slabs", () -> new BoardingschoolWhiteBrickSlabsBlock());
	public static final RegistryObject<Block> OSTREELOG = REGISTRY.register("ostreelog", () -> new OstreelogBlock());
	public static final RegistryObject<Block> OSTREELOG_FULL = REGISTRY.register("ostreelog_full", () -> new OstreelogFullBlock());
	public static final RegistryObject<Block> BLUEAMBERBLOCK = REGISTRY.register("blueamberblock", () -> new BlueamberblockBlock());
	public static final RegistryObject<Block> WEAPON_FORGE = REGISTRY.register("weapon_forge", () -> new WeaponForgeBlock());
	public static final RegistryObject<Block> SCRIBING_STATION = REGISTRY.register("scribing_station", () -> new ScribingStationBlock());
	public static final RegistryObject<Block> OSTREEOMEGAN = REGISTRY.register("ostreeomegan", () -> new OstreeomeganBlock());
	public static final RegistryObject<Block> BLUE_OSTREE_LEAVES = REGISTRY.register("blue_ostree_leaves", () -> new BlueOstreeLeavesBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_OSTREE_LEAVES = REGISTRY.register("light_blue_ostree_leaves", () -> new LightBlueOstreeLeavesBlock());
	public static final RegistryObject<Block> OSTREE_LEAVES = REGISTRY.register("ostree_leaves", () -> new OstreeLeavesBlock());
	public static final RegistryObject<Block> RED_OSTREE_LEAVES = REGISTRY.register("red_ostree_leaves", () -> new RedOstreeLeavesBlock());
	public static final RegistryObject<Block> ORANGE_OSTREE_LEAVES = REGISTRY.register("orange_ostree_leaves", () -> new OrangeOstreeLeavesBlock());
	public static final RegistryObject<Block> OSTREELOG_2 = REGISTRY.register("ostreelog_2", () -> new Ostreelog2Block());
	public static final RegistryObject<Block> OSTREELOG_3 = REGISTRY.register("ostreelog_3", () -> new Ostreelog3Block());
	public static final RegistryObject<Block> OSTREELOG_4 = REGISTRY.register("ostreelog_4", () -> new Ostreelog4Block());
	public static final RegistryObject<Block> OSTREELOG_5 = REGISTRY.register("ostreelog_5", () -> new Ostreelog5Block());
	public static final RegistryObject<Block> OSTREELOG_FULL_2 = REGISTRY.register("ostreelog_full_2", () -> new OstreelogFull2Block());
	public static final RegistryObject<Block> OSTREELOG_FULL_3 = REGISTRY.register("ostreelog_full_3", () -> new OstreelogFull3Block());
	public static final RegistryObject<Block> OSTREELOG_FULL_4 = REGISTRY.register("ostreelog_full_4", () -> new OstreelogFull4Block());
	public static final RegistryObject<Block> OSTREELOG_FULL_5 = REGISTRY.register("ostreelog_full_5", () -> new OstreelogFull5Block());
}
